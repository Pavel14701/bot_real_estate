from abc import ABC
from decimal import Decimal
import time
from bot_instance import bot
from telebot.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from fsm import cache_storage, UserStates
from utils.utils import del_msg, run_in_thread, update_msg_to_del
from utils.middlewares import LogExceptionMiddlewareMeta
from telebot.states.sync.context import StateContext
from rental_profitable.functions import CalculatingRentProfitable


class RentProfitableTypes(ABC):
    def __init__(self):
        super().__init__()


    def create_keyboard1(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚ñ∂–ù–∞—á–∞—Ç—å', callback_data='r_property_appreciation'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        keyboard.row(InlineKeyboardButton('ü§î –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?¬ø?', url='https://vc.ru/u/1529738-pashtet-medved/803809-dohodnyy-analiz-ceny-kak-prodat-po-maksimumu-kommercheskuyu-nedvizhimost-i-zhile-pod-arendu'))
        return keyboard


    def create_keyboard2(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.add(InlineKeyboardButton('‚öí –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


    def create_keyboard3(self) -> InlineKeyboardMarkup:
        # sourcery skip: class-extract-method
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rpa'), InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


    def create_keyboard4(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('üî¥ –î–æ–ª—è', callback_data='r_share'), InlineKeyboardButton('üü† 1 –∫–æ–º–Ω', callback_data='r_1room'), InlineKeyboardButton('üü° 2 –∫–æ–º–Ω', callback_data='r_2room'))
        keyboard.row(InlineKeyboardButton('üü¢ 3 –∫–æ–º–Ω', callback_data='r_3room'), InlineKeyboardButton('üîµ 4 –∫–æ–º–Ω', callback_data='r_4room'), InlineKeyboardButton('üü£ 5 –∏ 5+ –∫–æ–º–Ω–∞—Ç—ã', callback_data='r_5room'))
        keyboard.row(InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='r_back_to_raa'), InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


    def create_keyboard5(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rnor'), InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


    def create_keyboard6(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rfp'), InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


    def create_keyboard7(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rrp'), InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


    def create_keyboard8(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.by'))
        keyboard.row(InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rmc'), InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        return keyboard


class RentProfitableErrors(RentProfitableTypes, ABC, meta_class=LogExceptionMiddlewareMeta):
    def __init__(self):
        RentProfitableTypes.__init__(self)
        ABC.__init__(self)


    def property_appreciation_error(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        state.set(UserStates.waiting_price_of_house_for_rent)
        del_msg(chat_id, user_id)
        to_del = [bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.\n –ò–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.', reply_to_message_id=message.id)]
        to_del.append(bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ $/–º¬≤'))
        to_del.append(bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard1()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    def property_appreciation_error_big_price(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        state.set(UserStates.waiting_price_of_house_for_rent)
        del_msg(chat_id, user_id)
        to_del = [bot.send_message(chat_id, '–Ø –¥—É–º–∞—é —É –≤–∞—Å –µ—Å—Ç—å —á—Ç–æ –æ–±—Å—É–¥–∏—Ç—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.\n –£—á–∏—Ç—ã–≤–∞—è –Ω–∏–∑–∫—É—é –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–∞–∫–æ–≥–æ —Ä–æ–¥–∞, —è –Ω–µ —Å–º–æ–≥—É –¥–∞—Ç—å —Ç–æ—á–Ω—É—é –æ—Ü–µ–Ω–∫—É. \n –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—É—é –ª–∏–Ω–∏—é, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥.')]
        to_del.append(bot.send_message(chat_id, '–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –µ—Å–ª–∏ —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É.\n –î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ $/–º¬≤, –µ—â—ë —Ä–∞–∑.'))
        to_del.append(bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard2()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    def apartment_area_error(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_apartment_area_for_rent)
        to_del = [bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')]
        to_del.append(bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –º¬≤'))
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard3()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    def forecast_period_error(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_forcast_period_for_rent)
        to_del = [bot.send_message(chat_id, '–£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.', reply_to_message_id=message.id)]
        to_del.append(bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç)'))
        to_del.append(bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard5()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    def rental_price_error(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        state.set(UserStates.waiting_rental_price_for_rent)
        to_del = [bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. \n –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')]
        to_del.append(bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∞—Ä–µ–Ω–¥–Ω–æ–π –ø–ª–∞—Ç—ã $/–º–µ—Å—è—Ü'))
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard6()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    def maintenance_cost_error(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_maintance_cost_for_rent)
        to_del = [bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')]
        to_del.append(bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ $ –≤ –≥–æ–¥, —É—á—Ç–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Å–º–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏'))
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard7()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


class RentProfitable(RentProfitableTypes, RentProfitableErrors, meta_class=LogExceptionMiddlewareMeta):
    instance=None


    def __new__(cls):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
        return cls._instance


    def __init__(self) -> None:
        super().__init__()


    def send_greeting(self, chat_id:int|str, user_id:int|str) -> None:
        del_msg(chat_id, user_id)
        with open('./content/rent/hello.jpg', 'rb') as img1:
            to_del = [bot.send_photo(chat_id, img1, caption='–ü—Ä–∏–≤–µ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—ã–≥–æ–¥–Ω–æ—Å—Ç—å —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ –¥–æ—Ö–æ–¥–Ω–æ–º—É –º–µ—Ç–æ–¥—É. –Ø –±—É–¥—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∞ –ø–æ—Ç–æ–º –ø–æ–∫–∞–∂—É –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞, –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ, –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –º–æ–π —Ç–≥ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ —Å–∞–π—Ç, –µ—Å–ª–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ–≤–∞–Ω—ã')]
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=self.create_keyboard1()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_started')


    def property_appreciation(self, message:Message, state:StateContext) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_price_of_house_for_rent)
        with open('./content/rent/price.jpg', 'rb') as img:
            to_del = [bot.send_photo(chat_id, img, caption='–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. –ï—Å–ª–∏ –≤—ã –µ—ë –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è \n —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å—Å—á—ë—Ç–∞ —Ä—ã–Ω–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏.')]
        to_del.append(bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard1()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    @bot.message_handler(state=UserStates.waiting_price_of_house_for_rent)
    def prop_ap_hand(self, message:Message) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        try:
            message.text = message.text.replace(',', '.')
            r_answer = Decimal(message.text)
            if not Decimal('1') <= r_answer <= Decimal('250000'):
                return self.property_appreciation_error_big_price(message)
            if '.' in message.text and len(message.text.split('.')[-1]) > 2:
                return self.property_appreciation_error(message)
            if message.text.startswith('0') and message.text != '0':
                return self.property_appreciation_error(message)
            if message.text.startswith('-'):
                return self.property_appreciation_error(message)
        except ValueError:
            return self.property_appreciation_error(message)
        cache_storage.set_value(user_id, chat_id, 'r_property_appreciation', Decimal(r_answer))
        return self.apartment_area(chat_id, user_id)


    def apartment_area(self, chat_id:int|str, user_id:int|str, state:StateContext) -> None:
        state.set(UserStates.waiting_apartment_area_for_rent)
        del_msg(chat_id, user_id)
        with open('./content/rent/area.jpg', 'rb') as img1:
            to_del = [bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –º¬≤')]
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard3()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    @bot.message_handler(state = UserStates.waiting_apartment_area_for_rent)
    def ap_ar_hand(self, message:Message) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        try:
            message.text = message.text.replace(',', '.')
            r_answer = float(message.text)
            if not 1 <= r_answer <= 9999:
                return self.apartment_area_error(message)
            if '.' in message.text and len(message.text.split('.')[-1]) > 2:
                return self.apartment_area_error(message)
            if message.text.startswith('0') and message.text != '0':
                return self.apartment_area_error(message)
            if message.text.startswith('-'):
                return self.apartment_area_error(message)
        except ValueError:
            return self.apartment_area_error(message)
        cache_storage.set_value(user_id, chat_id, 'r_apartment_area', r_answer)
        self.number_of_rooms(chat_id, user_id)


    def number_of_rooms(self, chat_id:int|str, user_id:int|str) -> None:
        del_msg(chat_id, user_id)
        with open('./content/rent/rooms.jpg', 'rb') as img1:
            to_del = [bot.send_photo(chat_id, img1, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ.')]
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=self.create_keyboard4()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    def forecast_period(self, chat_id:int|str, user_id:int|str, state:StateContext) -> None:
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_forcast_period_for_rent)
        with open('./content/rent/forecast.jpg', 'rb') as img1:
            to_del = [bot.send_photo(chat_id, img1, '–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç)')]
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard5()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    @bot.message_handler(state=UserStates.waiting_forcast_period_for_rent)
    def r_for_per_hand(self, message:Message) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        try:
            message = message.text.replace('-', '')
            message.text = message.text.split('.')[0].split(',')[0]
            message.text = message.text.lstrip('0')
            r_answer = int(message.text, 10)
            if not (0 <= r_answer <= 99):
                return self.forecast_period_error(message)
        except ValueError:
            return self.forecast_period_error(message)
        cache_storage.set_value(user_id, chat_id, 'r_forecast_period', r_answer)
        return self.rental_price(chat_id, user_id)


    def rental_price(self, chat_id:int|str, user_id:int|str, state:StateContext) -> None:
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_rental_price_for_rent)
        with open('./content/rent/income.jpg', 'rb') as img1:
            to_del = [bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∞—Ä–µ–Ω–¥–Ω–æ–π –ø–ª–∞—Ç—ã $/–º–µ—Å—è—Ü')]
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard6()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    @bot.message_handler(state = UserStates.waiting_rental_price_for_rent)
    def r_rent_price_hand(self, message:Message) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        try:
            message.text = message.text.replace(',', '.')
            r_answer = float(message.text)
            if not 1 <= r_answer <= 9999:
                return self.property_appreciation_error(message)
            if '.' in message.text and len(message.text.split('.')[-1]) > 2:
                return self.property_appreciation_error(message)
            if message.text.startswith('-'):
                return self.property_appreciation_error(message)
        except ValueError:
            return self.property_appreciation_error(message)
        cache_storage.set_value(user_id, chat_id, 'r_rental_price', r_answer)
        self.maintenance_cost(chat_id, user_id)


    def maintenance_cost(self, chat_id:int|str, user_id:int|str, state:StateContext) -> None:
        del_msg(chat_id, user_id)
        state.set(UserStates.waiting_maintance_cost_for_rent)
        with open('./content/rent/costs.jpg', 'rb') as img1:
            to_del = [bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ $ –≤ –≥–æ–¥, —É—á—Ç–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Å–º–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏')]
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=self.create_keyboard7()))
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')


    @bot.message_handler(state = UserStates.waiting_maintance_cost_for_rent)
    def r_the_end(self, message:Message) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        if not message.text:
            return self.maintenance_cost_error(message)
        try:
            message.text = message.text.replace(',', '.')
            r_answer = float(message.text)
            if not 1 <= r_answer <= 9999:
                return self.maintenance_cost_error(message)
            if '.' in message.text and len(message.text.split('.')[-1]) > 2:
                return self.maintenance_cost_error(message)
            if message.text.startswith('0') and message.text != '0':
                return self.maintenance_cost_error(message)
            if message.text.startswith('-'):
                return self.maintenance_cost_error(message)
        except ValueError:
            return self.maintenance_cost_error(message)
        cache_storage.set_value(user_id, chat_id, 'r_maintenance_costs', r_answer)
        self.send_results(chat_id, user_id)



    def send_results(self, chat_id:int, user_id:int) -> None:
        # sourcery skip: extract-method, hoist-similar-statement-from-if
        # sourcery skip: hoist-statement-from-if, inline-immediately-returned-variable
        # sourcery skip: move-assign-in-block, remove-redundant-fstring
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'completed')
        CalculatingRentProfitable(chat_id, user_id).rent_results()
        results = cache_storage.get_values(user_id, chat_id)
        if results['r_is_profitable']:
            message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è.** \n\n –ù–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É: {int(results['r_property_appreciation'])} $.\n"
            message1 += f"–≠—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å–µ–π—á–∞—Å, —É—á–∏—Ç—ã–≤–∞—è –æ–∂–∏–¥–∞–µ–º—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏."
            message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {int(results['r_forecast_period'])} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(results['r_present_apartment_value'], 500)} $.\n"
            message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {int(results['r_forecast_period'])} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
            message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –≤—ã–≥–æ–¥–Ω–∞.\n"
            message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –≤ —Ü–µ–Ω–µ."
            with open('./content/rent/result.jpg', 'rb') as img1:
                to_del = [bot.send_photo(chat_id, img1, caption=message1 + message2 + message3, parse_mode='Markdown')] 
        else:
            message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è.** \n\n –ù–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É: {int(results['r_property_appreciation'])} $.\n"
            message1 += f"–≠—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å–µ–π—á–∞—Å, —É—á–∏—Ç—ã–≤–∞—è –æ–∂–∏–¥–∞–µ–º—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏."
            message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {int(results['r_forecast_period'])} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(results['r_present_apartment_value'], 500)} $.\n"
            message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {int(results['r_forecast_period'])} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
            message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–≤—ã–≥–æ–¥–Ω–∞.\n"
            message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∞—Ä–µ–Ω–¥—É, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å."
            with open('./content/rent/result.jpg', 'rb') as img1:
                to_del = [bot.send_photo(chat_id, img1, caption=message1 + message2 + message3, parse_mode='Markdown')]
        if results['r_is_profitable_up']:
            message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç —Ä–∞—Å—Ç–∏.** \n\n"
            message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {int(results['r_forecast_period'])} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(results['r_present_apartment_value_up'], 500)} $.\n"
            message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {int(results['r_forecast_period'])} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞. –ó–¥–µ—Å—å —Ç–∞–∫–∂–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
            message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –≤—ã–≥–æ–¥–Ω–∞.\n"
            message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –≤ —Ü–µ–Ω–µ."
            to_del.append(bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown'))
        else:
            message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç —Ä–∞—Å—Ç–∏.** \n\n"
            message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {int(results['r_forecast_period'])} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(results['r_present_apartment_value_up'], 500)} $.\n"
            message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {int(results['r_forecast_period'])} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
            message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–≤—ã–≥–æ–¥–Ω–∞.\n"
            message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∞—Ä–µ–Ω–¥—É, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å."
            to_del.append(bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown'))
        if results['r_is_profitable_down']:
            message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç –ø–∞–¥–∞—Ç—å.** \n\n"
            message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {int(results['r_forecast_period'])} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(results['r_present_apartment_value_down'], 500)} $.\n"
            message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {int(results['r_forecast_period'])} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞. –í—Å—ë —É—á—Ç–µ–Ω–æ."
            message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –≤—ã–≥–æ–¥–Ω–∞.\n"
            message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –≤ —Ü–µ–Ω–µ."
            to_del.append(bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown'))
        else:
            message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç –ø–∞–¥–∞—Ç—å.** \n\n"
            message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {int(results['r_forecast_period'])} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(results['r_present_apartment_value_down'], 500)} $.\n"
            message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {int(results['r_forecast_period'])} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
            message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–≤—ã–≥–æ–¥–Ω–∞.\n"
            message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∞—Ä–µ–Ω–¥—É, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å."
            to_del.append(bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown'))
        to_del.append(bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=self.create_keyboard8()))
        update_msg_to_del(chat_id, user_id, to_del) 


    @run_in_thread()
    def restart(self, message:Message) -> None:
        chat_id, user_id = message.chat.id, message.from_user.id
        del_msg(chat_id, user_id)
        to_del = [bot.send_message(chat_id, '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—á—ë—Ç–∞')]
        update_msg_to_del(chat_id, user_id, to_del)
        cache_storage.set_value(user_id, chat_id, 'reminder_states', 'r_in_progress')
        time.sleep(2)
        self.send_greeting(chat_id, user_id)