# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import telebot, time, threading, pickle, re, time, os, math, random
import telebot, schedule , requests, datetime, g4f, smtplib, matplotlib.pyplot as plt
import pandas as pd, numpy as np, statistics
from sqlalchemy import text
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
from telebot.handler_backends import State, StatesGroup
from decimal import Decimal
from g4f.client import Client
from email.mime.text import MIMEText
from dotenv import load_dotenv
from db import CacUserData, User, StreetName, create_tables
from bot_inst import bot, state_storage
load_dotenv()

Session, Session_streets = create_tables()



def get_state(user_id):
    return state_storage.get_value(str(user_id))

def update_state(user_id, state):
    state_storage.set_value(str(user_id), state)

def reset_state(user_id):
    state_storage.delete_value(str(user_id))


class EmailSender:
    def __init__(self):
        self.smtp_server = 'smtp.gmail.com'
        self.smtp_port = 587
        self.smtp_user = os.getenv('MAIL')
        self.smtp_password = os.getenv('MAIL_PASSWORD')
        
    def send_email(self, subject, message, to_email):
        msg = MIMEText(message)
        msg['Subject'] = subject
        msg['From'] = self.smtp_user
        msg['To'] = to_email
        server = smtplib.SMTP(self.smtp_server, self.smtp_port)
        server.starttls()
        server.login(self.smtp_user, self.smtp_password)
        server.sendmail(self.smtp_user, to_email, msg.as_string())
        server.quit()



BASE_VALUE = 40 # –±–∞–∑–æ–≤–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ –≤ BYN
CURRENCY_API = 'https://api.nbrb.by/exrates/rates?periodicity=0'





# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
def create_keyboard():
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton("ü§ñ –ö—É–∑—è - –≤–∞—à –ø–æ–º–æ—à–Ω–∏–∫ –Ω–∞ –±–∞–∑–µ AI", callback_data="kuzia_chatbotai"))
    keyboard.add(telebot.types.InlineKeyboardButton("üîç –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω—ã", callback_data="price"))
    keyboard.add(telebot.types.InlineKeyboardButton("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–∏—Ö —É—Å–ª—É–≥", callback_data="calc"))
    keyboard.add(telebot.types.InlineKeyboardButton("üíµ –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É", callback_data="rent"))
    """
    #keyboard.add(telebot.types.InlineKeyboardButton("üß† –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="analytics"))
    #keyboard.add(telebot.types.InlineKeyboardButton("–ü–æ–¥–±–æ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º", callback_data="search"))
    """
    keyboard.add(telebot.types.InlineKeyboardButton("üòé –£—Å–ª—É–≥–∏", callback_data="services"))
    return keyboard

@bot.message_handler(commands=["start"])
def menu1(message):
    uid = message.chat.id
    chat_id = uid
    state_storage.set_value(f'reminder_states:{chat_id}', 'completed')
    nick1 = message.from_user.first_name
    nick2 = message.from_user.last_name
    start_time = datetime.datetime.now()
    user = User(uid = uid,
                nick1 = nick1,
                nick2 = nick2,
                start_time = datetime.datetime.now()
                )
    with Session() as session_start:
        if not session_start.query(User).filter_by(uid=uid).first():
            session_start.add(user)
            session_start.commit()
        user = CacUserData(user_id=uid)
        if not session_start.query(CacUserData).filter_by(user_id=uid).first():
            session_start.add(user)
            session_start.commit()
    photo_main = bot.send_photo(uid, open("C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\hello.jpg", "rb"))
    message_main1 = bot.send_message(uid, f"–ü—Ä–∏–≤–µ—Ç {nick1} {nick2}, –º–µ–Ω—è –∑–æ–≤—É—Ç –ö—É–∑—è –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º —Å —Ä–µ—à–µ–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é. –Ø –º–æ–≥—É –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É, –æ—Ü–µ–Ω–∏—Ç—å —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–∏—Ö —É—Å–ª—É–≥.")
    message_main2 = bot.send_message(uid, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", reply_markup=create_keyboard())
    state_storage.set_value(f'main_del:{chat_id}', message_main2.message_id)


def menu(chat_id):
    reset_state(chat_id)
    msgs_del = ['ai_del', 'cf_cur_sel_del', 'cac_ccr_del', 'cac_region_choice_del', 'cac_fin_street_choice_del', 'cac_chn_del',
                    'cac_ctoh_del', 'cac_ctm_del', 'cac_ctb_del', 'cac_ctp_del', 'cac_caoh_del', 'cac_cnore_del',
                    'cac_cta_del', 'cac_cpf_del', 'r_ar_del', 'r_ar_er_del', 'r_for_del', 'r_for_er_del',
                    'r_rent_del', 'r_rent_er_del', 'r_mcost_del', 'r_mcost_er_del', 'r_rsr_del', 'r_greet_del', 'services_final_del', 'serv_sell_handler_del',
                    'services_sell_dell']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    photo_main = bot.send_photo(chat_id, open("C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\hello.jpg", "rb"))
    state_storage.set_value(f'reminder_states:{chat_id}', 'completed')
    with Session() as session_name:
        user = session_name.query(User).filter_by(uid=chat_id).first()
        nick1 = user.nick1
        nick2 = user.nick2
    message_main1 = bot.send_message(chat_id, f"–ü—Ä–∏–≤–µ—Ç {nick1} {nick2}, –º–µ–Ω—è –∑–æ–≤—É—Ç –ö—É–∑—è –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º —Å —Ä–µ—à–µ–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é. –Ø –º–æ–≥—É –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É, –æ—Ü–µ–Ω–∏—Ç—å —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–∏—Ö —É—Å–ª—É–≥.")
    message_main2 = bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", reply_markup=create_keyboard())
    state_storage.set_value(f'main_del:{chat_id}', message_main2.message_id)

def send_greeting_cac(chat_id):
    del_mes = state_storage.get_value(f'main_del:{chat_id}')
    try:
        bot.delete_message (chat_id, del_mes)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    message_greeting = bot.send_message(chat_id, '–¢–∞–∫, –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –£—á—Ç–∏—Ç–µ, —á—Ç–æ —è –º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω,\n –¥–ª—è —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –î–ª—è —Ä–∞—Å—Å—á—ë—ë—Ç–∞ –º–Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∞ –ø–æ—Ç–æ–º –ø–æ–∫–∞–∂—É –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –í—ã –Ω–µ –ø—Ä–æ—Ç–∏–≤ ?\n –ö—Å—Ç–∞—Ç–∏, —è –∑–∞–ø–æ–º–Ω—é –≤—Å–µ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∏ —Å–º–æ–≥—É –≤ –±—É–¥—É—â–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –Ω–µ —Å—Ç–æ—è—Ç –Ω–∞ –º–µ—Å—Ç–µ, –∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –º–µ–Ω—è—é—Ç—Å—è.')
    message_greet = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac1())
    state_storage.set_value(f'cac_greet_del:{chat_id}', message_greet.message_id)

def create_keyboard_cac1():
    keyboard1cac = types.InlineKeyboardMarkup()
    keyboard1cac.row(types.InlineKeyboardButton('üîç –ü–æ–∂–∞–ª—É–π –Ω–∞—á–Ω—ë–º', callback_data='cac_minsk_region_entry'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    keyboard1cac.add(types.InlineKeyboardButton('üíº –†–∞—Å—á—ë—Ç –ø–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º', callback_data='cac_calculate_results'))
    keyboard1cac.add(types.InlineKeyboardButton('–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ?¬ø?', url='https://vc.ru/u/1529738-pashtet-medved/800356-sravnitelnyy-metod-ocenki-nedvizhimosti-kak-zarabotat-na-prodazhe-svoey-nedvizhimosti-v-usloviyah-krizisa'))
    keyboard1cac.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    return keyboard1cac




# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–ø—Ä–æ—Å–∞ –æ —Ä–∞–π–æ–Ω–µ –ú–∏–Ω—Å–∫–∞
def cac_minsk_region_choice(chat_id):
    msg_del = state_storage.get_value(f'cac_street_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    greet_del = state_storage.get_value(f'cac_greet_del:{chat_id}')
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\region.jpg', 'rb') as img:
        bot.send_photo(chat_id, img, caption='–£–∫–∞–∂–∏—Ç–µ —Ä–∞–π–æ–Ω –ú–∏–Ω—Å–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –æ—Ü–µ–Ω–∏–≤–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç.')
    try:
        bot.delete_message (chat_id, greet_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    cmrc = bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=create_keyboard_cac2())
    state_storage.set_value(f'cac_region_choice_del:{chat_id}', cmrc.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_started')

def create_keyboard_cac2():
    keyboard2cac = types.InlineKeyboardMarkup()
    keyboard2cac.row(types.InlineKeyboardButton('üê¶‚Äç‚¨õ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π', callback_data='cac_centr'), types.InlineKeyboardButton('üê¶‚Äç‚¨õ –§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π', callback_data='cac_frunz'))
    keyboard2cac.row(types.InlineKeyboardButton('üê¶‚Äç‚¨õ –õ–µ–Ω–∏–Ω—Å–∫–∏–π', callback_data='cac_lenin'), types.InlineKeyboardButton('üê¶‚Äç‚¨õ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π', callback_data='cac_moscow'))
    keyboard2cac.row(types.InlineKeyboardButton('üê¶‚Äç‚¨õ –ó–∞–≤–æ–¥—Å–∫–æ–π', callback_data='cac_zavod'), types.InlineKeyboardButton('üê¶‚Äç‚¨õ –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π', callback_data='cac_firstmay'))
    keyboard2cac.row(types.InlineKeyboardButton('üê¶‚Äç‚¨õ –û–∫—Ç—è–±—Ä—å—Å–∫–∏–π', callback_data='cac_october'), types.InlineKeyboardButton('üê¶‚Äç‚¨õ –°–æ–≤–µ—Ç—Å–∫–∏–π', callback_data='cac_sovet'))
    keyboard2cac.add(types.InlineKeyboardButton('üê¶‚Äç‚¨õ –ü–∞—Ä—Ç–∏–∑–∞–Ω—Å–∫–∏–π', callback_data='cac_partiz'))
    keyboard2cac.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    keyboard2cac.add(types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard2cac

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–ø—Ä–æ—Å–∞ –æ–± —É–ª–∏—Ü–µ
def cac_minsk_street_choice(chat_id):
    msgs_del = ['cac_fin_street_choice_del', 'cac_region_choice_del']
    for msg_del in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg_del}:{chat_id}')
            try:
                bot.delete_message (chat_id, mes_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    with open("C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\street_choice.jpg", 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ —É–ª–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Ü–µ–Ω–∏–≤–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç.')
    cmsc = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac3())
    state_storage.set_value(f'cac_street_del:{chat_id}', cmsc.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')
    update_state(chat_id, 'result_street_choice')

def create_keyboard_cac3():
    keyboard3cac = types.InlineKeyboardMarkup()
    keyboard3cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_cmrc'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    keyboard3cac.add(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    return keyboard3cac

# —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º —É–ª–∏—Ü—ã
@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'result_street_choice')
def cac_final_street_choice(message):
    chat_id = message.chat.id
    mes_del = state_storage.get_value(f'cac_street_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    state_storage.set_value(f'chosen_street_name:{chat_id}', message.text)
    chosen_street_name = state_storage.get_value(f'chosen_street_name:{chat_id}')
    street_list = []
    with Session_streets() as session_streets:
        street_names = session_streets.query(StreetName).all()
    if not message.text:
        cac_street_choice_error(chat_id)
        return
    for street in street_names:
        pattern = chosen_street_name
        if re.search(pattern, street.street_name, re.IGNORECASE):
            street_list.append(street.street_name)
    if street_list:
        with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\bd.jpg', 'rb') as img1:
            bot.send_photo(message.chat.id, img1, caption=f'–í—ã –≤–≤–µ–ª–∏ {chosen_street_name}. –ü–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –Ω–∞—à–ª–æ—Å—å {len(street_list)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.')
        keyboard4cac = telebot.types.InlineKeyboardMarkup()
        for street in street_list:
            keyboard4cac.add(telebot.types.InlineKeyboardButton(f'üîê {street}', callback_data=f'street_{street}'))
        keyboard4cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_cmsc'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
        keyboard4cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
        cfsc = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ü—É –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=keyboard4cac)
        state_storage.set_value(f'cac_fin_street_choice_del:{chat_id}', cfsc.message_id)
    else:
        cac_street_choice_error(chosen_street_name, chat_id)

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞ —É–ª–∏—Ü—ã
def cac_street_choice_error(chosen_street_name, chat_id):
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\no_bd.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption=f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª —É–ª–∏—Ü—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {chosen_street_name} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω–Ω—ã—Ö.')
    bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.')
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')
    cac_minsk_street_choice(chat_id)

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞
def cac_house_number(chat_id):
    msgs_del = ['cac_ctoh_del', 'cac_fin_street_choice_del']
    for mes_del in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{mes_del}:{chat_id}')
            try:
                bot.delete_message (chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    update_state(chat_id, 'waiting_for_type_of_house')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\numb_h.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–º–∞')
    chn = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac4())
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')
    state_storage.set_value(f'cac_chn_del:{chat_id}', chn.message_id)

def create_keyboard_cac4():
    keyboard5cac = types.InlineKeyboardMarkup()
    keyboard5cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_cmsc'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    keyboard5cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    return keyboard5cac

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤–≤–æ–¥–∞ —Ç–∏–ø–∞ –¥–æ–º–∞
@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_for_type_of_house')
def cac_type_of_house(message):
    chat_id = message.chat.id
    msgs_del = ['cac_ctp_del', 'cac_ctb_del', 'cac_ctm_del', 'cac_caoh_del', 'cac_chn_del']
    for msg in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, mes_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick.jpg', 'rb') as img2, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\mon.jpg', 'rb') as img3:
        bot.send_photo(chat_id, img1, caption='–ü–∞–Ω–µ–ª—å–Ω—ã–µ –¥–æ–º–∞ ‚Äî –∑–¥–∞–Ω–∏—è –∏–∑ –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π, —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –Ω–∞ –º–µ—Å—Ç–µ. –í–Ω–µ—à–Ω–∏–µ —Å—Ç–µ–Ω—ã ‚Äî –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–µ, —Å —É—Ç–µ–ø–ª–∏—Ç–µ–ª–µ–º; –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ ‚Äî –æ–¥–Ω–æ—Å–ª–æ–π–Ω—ã–µ. –†–∞–∑–ª–∏—á–∞—é—Ç—Å—è –ø–æ —Ä–∞–∑–º–µ—Ä—É –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º.')
        bot.send_photo(chat_id, img2, caption='–ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º ‚Äî —ç—Ç–æ –∑–¥–∞–Ω–∏–µ, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –∏–∑ –∫–∏—Ä–ø–∏—á–∞, –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ—á–Ω–æ—Å—Ç—å—é –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å—é. –°—Ç–µ–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–Ω–æ—Ç–µ–ª—ã–º–∏ –∏–ª–∏ –ø—É—Å—Ç–æ—Ç–µ–ª—ã–º–∏, —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –æ—Ç–¥–µ–ª–æ—á–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏. –ö–∏—Ä–ø–∏—á–Ω—ã–µ –¥–æ–º–∞ —Ü–µ–Ω—è—Ç—Å—è –∑–∞ –∏—Ö —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—é –∏ —ç—Å—Ç–µ—Ç–∏–∫—É.')
        bot.send_photo(chat_id, img3, caption='–ú–æ–Ω–æ–ª–∏—Ç–Ω—ã–π –¥–æ–º ‚Äî —ç—Ç–æ –∑–¥–∞–Ω–∏–µ —Å –±–µ—Å—à–æ–≤–Ω—ã–º –∫–∞—Ä–∫–∞—Å–æ–º, –æ—Ç–ª–∏—Ç—ã–º –∏–∑ –±–µ—Ç–æ–Ω–∞ –ø–æ—ç—Ç–∞–∂–Ω–æ. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å—Ç—ã–∫–æ–≤ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –ø—Ä–æ—á–Ω—ã–º –∏ —É—Å—Ç–æ–π—á–∏–≤—ã–º –∫ –ø–æ–≥–æ–¥–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.')
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞')
    ctoh = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac6())
    state_storage.set_value(f'cac_ctoh_del:{chat_id}', ctoh.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')

def create_keyboard_cac6():
    keyboard6cac = types.InlineKeyboardMarkup()
    keyboard6cac.row(types.InlineKeyboardButton('üè¢ –ü–∞–Ω–µ–ª—å–Ω—ã–π', callback_data='cac_panel'), types.InlineKeyboardButton('üß± –ö–∏—Ä–ø–∏—á–Ω—ã–π', callback_data='cac_brick'), types.InlineKeyboardButton('üèõ –ú–æ–Ω–æ–ª–∏—Ç–Ω—ã–π', callback_data='cac_monolith'))
    keyboard6cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard6cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_chn'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard6cac



# –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ —Ç–∏–ø–∞ –¥–æ–º–∞ –ø–∞–Ω–µ–ª—å
def cac_type_panel(chat_id):
    mes_del = state_storage.get_value(f'cac_ctoh_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\chruzh1.jpg', 'rb') as img1,\
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\chruzh2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–•—Ä—É—â—ë–≤–∫–∏ ‚Äî —ç—Ç–æ —Ç–∏–ø–æ–≤—ã–µ –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –º–∞—Å—Å–æ–≤–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã –≤ –°–°–°–† —Å 1956 –ø–æ 1974 –≥–æ–¥. –û–Ω–∏ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —á–µ—Å—Ç—å –ù–∏–∫–∏—Ç—ã –•—Ä—É—â—ë–≤–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∏—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∂–∏–ª—å—è –ø–æ—Å–ª–µ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã. –•—Ä—É—â—ë–≤–∫–∏ –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç 4-5 —ç—Ç–∞–∂–µ–π, —Ö–æ—Ç—è –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∏ 2-3, –∞ —Ç–∞–∫–∂–µ 8-9 —ç—Ç–∞–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. –≠—Ç–∏ –¥–æ–º–∞ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –ø—Ä–æ—Å—Ç–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π, –∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –Ω–∏—Ö –∏–º–µ—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞–∑–º–µ—Ä—ã"),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\brezh1.jpg', 'rb') as img1,\
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\brezh2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–ë—Ä–µ–∂–Ω–µ–≤–∫–∏ ‚Äî —ç—Ç–æ —Ç–∏–ø–æ–≤—ã–µ –∂–∏–ª—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—Ä–æ–∏–ª–∏—Å—å –≤ –°–°–°–† —Å 1964 –ø–æ 1985 –≥–æ–¥. –û–Ω–∏ –Ω–∞–∑–≤–∞–Ω—ã –≤ —á–µ—Å—Ç—å –õ–µ–æ–Ω–∏–¥–∞ –ë—Ä–µ–∂–Ω–µ–≤–∞ –∏ —è–≤–ª—è—é—Ç—Å—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π —Ö—Ä—É—â—ë–≤–æ–∫. –ë—Ä–µ–∂–Ω–µ–≤–∫–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –ø–∞–Ω–µ–ª—å–Ω—ã–µ, –±–ª–æ—á–Ω—ã–µ –∏–ª–∏ –∫–∏—Ä–ø–∏—á–Ω—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –±–æ–ª–µ–µ –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–æ–π –∏ –±–æ–ª—å—à–µ–π –ø–ª–æ—â–∞–¥—å—é –∫–≤–∞—Ä—Ç–∏—Ä. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Ö—Ä—É—â—ë–≤–æ–∫, –≤ –±—Ä–µ–∂–Ω–µ–≤–∫–∞—Ö –∏–Ω–æ–≥–¥–∞ –µ—Å—Ç—å –ª–∏—Ñ—Ç—ã, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∞–ª–∫–æ–Ω—ã –∏–ª–∏ –ª–æ–¥–∂–∏–∏, –∞ —Ç–∞–∫–∂–µ —É–ª—É—á—à–µ–Ω–Ω–∞—è –∑–≤—É–∫–æ –∏ —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è"),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\standart1.jpg', 'rb') as img1,\
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\standart2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–î–æ–º–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ú–∏–Ω—Å–∫–µ –∏ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö –±—ã–≤—à–µ–≥–æ –°–°–°–† ‚Äî —ç—Ç–æ –º–Ω–æ–≥–æ—ç—Ç–∞–∂–Ω—ã–µ –∑–¥–∞–Ω–∏—è, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–∑ –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π, —Ö–æ—Ç—è –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∏ –∫–∏—Ä–ø–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. –¢–∏–ø–∏—á–Ω—ã–µ –¥–æ–º–∞ –∏–º–µ—é—Ç –æ—Ç 5 –¥–æ 12 —ç—Ç–∞–∂–µ–π, —Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–Ω–∏–µ–º 9-—ç—Ç–∞–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ö–≤–∞—Ä—Ç–∏—Ä—ã —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É –∏ –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å –æ—Ç 1 –¥–æ 4 –∫–æ–º–Ω–∞—Ç, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω—ã –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ —à–∫–∞—Ñ–∞–º–∏ –∏ –º—É—Å–æ—Ä–æ–ø—Ä–æ–≤–æ–¥–∞–º–∏. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2,5 –º–µ—Ç—Ä–∞. –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –¥–æ–º–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏—Ñ—Ç—ã, –∞ –Ω–∞ –ø–µ—Ä–≤—ã—Ö —ç—Ç–∞–∂–∞—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –º–∞–≥–∞–∑–∏–Ω—ã –∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã."),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\upgrade1.jpg', 'rb') as img1,\
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\panel\\upgrade2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–î–æ–º–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞–º–∏ ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∂–∏–ª—ã–µ –∑–¥–∞–Ω–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –∫–æ–º—Ñ–æ—Ä—Ç–æ–º –∏ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é. –û–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç–µ–ø–ª–æ- –∏ –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–µ–π, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–æ–π, –±–æ–ª—å—à–∏–º–∏ –ø–ª–æ—â–∞–¥—è–º–∏ –∏ —ç—Å—Ç–µ—Ç–∏—á–Ω—ã–º–∏ —Ñ–∞—Å–∞–¥–∞–º–∏. –í—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ 2.5 - 2.7 –º–µ—Ç—Ä–∞."),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    ctp = bot.send_message(chat_id, '–°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –ø–∞–Ω–µ–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –∫ –∫–∞–∫–æ–º—É –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤–∏–¥–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≤–∞—à.', reply_markup=create_keyboard_cac7())
    state_storage.set_value(f'cac_ctp_del:{chat_id}', ctp.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')


def create_keyboard_cac7():
    keyboard7cac = types.InlineKeyboardMarkup()
    keyboard7cac.row(types.InlineKeyboardButton('üè° –•—Ä—É—â—ë–≤–∫–∞', callback_data='cac_hrush'), types.InlineKeyboardButton('üè° –ë—Ä–µ–∂–Ω–µ–≤–∫–∞', callback_data='cac_brezh'))
    keyboard7cac.row(types.InlineKeyboardButton('üè° –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', callback_data='cac_standart'), types.InlineKeyboardButton('üè° –£–ª—É—á—à–µ–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', callback_data='cac_upgrade'))
    keyboard7cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard7cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_ctoh'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard7cac

def cac_type_brick(chat_id):
    mes_del = state_storage.get_value(f'cac_ctp_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\stalin1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\stalin2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="‚Äú–°—Ç–∞–ª–∏–Ω–∫–∏‚Äù ‚Äî —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–∞–Ω–Ω–æ–µ –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–º –¥–æ–º–∞–º, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –≤ –°–°–°–† —Å –∫–æ–Ω—Ü–∞ 1930-—Ö –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã 1950-—Ö –≥–æ–¥–æ–≤, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –≤ –ø–µ—Ä–∏–æ–¥ –ø—Ä–∞–≤–ª–µ–Ω–∏—è –ò–æ—Å–∏—Ñ–∞ –°—Ç–∞–ª–∏–Ω–∞. –≠—Ç–∏ –∑–¥–∞–Ω–∏—è –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–º —Å—Ç—Ä–æ–µ–Ω–∏–µ–º, –≤—ã—Å–æ–∫–∏–º–∏ –ø–æ—Ç–æ–ª–∫–∞–º–∏, –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã–º–∏ –∫–≤–∞—Ä—Ç–∏—Ä–∞–º–∏ –∏ —á–∞—Å—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤ —Å—Ç–∏–ª–µ –Ω–µ–æ–∫–ª–∞—Å—Å–∏—Ü–∏–∑–º–∞. –í—ã—Å–æ–∫–∏–µ –ø–æ—Ç–æ–ª–∫–∏ 2.7 - 3 –º–µ—Ç—Ä–∞. –°—Ç–∞–ª–∏–Ω–∫–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã —Å–≤–æ–µ–π –ø—Ä–æ—á–Ω–æ—Å—Ç—å—é, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ –ª–µ–ø–Ω–∏–Ω–∞ –Ω–∞ —Ñ–∞—Å–∞–¥–∞—Ö"),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\chruzh1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\chruzh2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–•—Ä—É—â—ë–≤–∫–∏ ‚Äî —ç—Ç–æ —Ç–∏–ø–æ–≤—ã–µ –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –º–∞—Å—Å–æ–≤–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã –≤ –°–°–°–† —Å 1956 –ø–æ 1974 –≥–æ–¥. –û–Ω–∏ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —á–µ—Å—Ç—å –ù–∏–∫–∏—Ç—ã –•—Ä—É—â—ë–≤–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∏—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∂–∏–ª—å—è –ø–æ—Å–ª–µ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã. –•—Ä—É—â—ë–≤–∫–∏ –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç 4-5 —ç—Ç–∞–∂–µ–π, —Ö–æ—Ç—è –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∏ 2-3, –∞ —Ç–∞–∫–∂–µ 8-9 —ç—Ç–∞–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. –≠—Ç–∏ –¥–æ–º–∞ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –ø—Ä–æ—Å—Ç–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π, –∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –Ω–∏—Ö –∏–º–µ—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞–∑–º–µ—Ä—ã"),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\brezh1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\brezh2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–ë—Ä–µ–∂–Ω–µ–≤–∫–∏ ‚Äî —ç—Ç–æ —Ç–∏–ø–æ–≤—ã–µ –∂–∏–ª—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—Ä–æ–∏–ª–∏—Å—å –≤ –°–°–°–† —Å 1964 –ø–æ 1985 –≥–æ–¥. –û–Ω–∏ –Ω–∞–∑–≤–∞–Ω—ã –≤ —á–µ—Å—Ç—å –õ–µ–æ–Ω–∏–¥–∞ –ë—Ä–µ–∂–Ω–µ–≤–∞ –∏ —è–≤–ª—è—é—Ç—Å—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π —Ö—Ä—É—â—ë–≤–æ–∫. –ë—Ä–µ–∂–Ω–µ–≤–∫–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –ø–∞–Ω–µ–ª—å–Ω—ã–µ, –±–ª–æ—á–Ω—ã–µ –∏–ª–∏ –∫–∏—Ä–ø–∏—á–Ω—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –±–æ–ª–µ–µ –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–æ–π –∏ –±–æ–ª—å—à–µ–π –ø–ª–æ—â–∞–¥—å—é –∫–≤–∞—Ä—Ç–∏—Ä. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Ö—Ä—É—â—ë–≤–æ–∫, –≤ –±—Ä–µ–∂–Ω–µ–≤–∫–∞—Ö —á–∞—Å—Ç–æ –µ—Å—Ç—å –ª–∏—Ñ—Ç—ã, –±–∞–ª–∫–æ–Ω—ã –∏–ª–∏ –ª–æ–¥–∂–∏–∏, –∞ —Ç–∞–∫–∂–µ —É–ª—É—á—à–µ–Ω–Ω–∞—è –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è"),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\standart1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\standart2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–î–æ–º–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ú–∏–Ω—Å–∫–µ –∏ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö –±—ã–≤—à–µ–≥–æ –°–°–°–† ‚Äî —ç—Ç–æ –º–Ω–æ–≥–æ—ç—Ç–∞–∂–Ω—ã–µ –∑–¥–∞–Ω–∏—è, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–∑ –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π, —Ö–æ—Ç—è –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∏ –∫–∏—Ä–ø–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. –¢–∏–ø–∏—á–Ω—ã–µ –¥–æ–º–∞ –∏–º–µ—é—Ç –æ—Ç 5 –¥–æ 12 —ç—Ç–∞–∂–µ–π, —Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–Ω–∏–µ–º 9-—ç—Ç–∞–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ö–≤–∞—Ä—Ç–∏—Ä—ã —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä—É –∏ –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å –æ—Ç 1 –¥–æ 4 –∫–æ–º–Ω–∞—Ç, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω—ã –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ —à–∫–∞—Ñ–∞–º–∏ –∏ –º—É—Å–æ—Ä–æ–ø—Ä–æ–≤–æ–¥–∞–º–∏. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2,5 –º–µ—Ç—Ä–∞. –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –¥–æ–º–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏—Ñ—Ç—ã, –∞ –Ω–∞ –ø–µ—Ä–≤—ã—Ö —ç—Ç–∞–∂–∞—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –º–∞–≥–∞–∑–∏–Ω—ã –∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã."),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\upgrade1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\brick\\upgrade2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–î–æ–º–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞–º–∏ ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∂–∏–ª—ã–µ –∑–¥–∞–Ω–∏—è —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –∫–æ–º—Ñ–æ—Ä—Ç–æ–º –∏ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é. –û–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç–µ–ø–ª–æ- –∏ –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–µ–π, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–æ–π, –±–æ–ª—å—à–∏–º–∏ –ø–ª–æ—â–∞–¥—è–º–∏ –∏ —ç—Å—Ç–µ—Ç–∏—á–Ω—ã–º–∏ —Ñ–∞—Å–∞–¥–∞–º–∏. –í—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ 2.5 - 2.7 –º–µ—Ç—Ä–∞."),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    ctb =     bot.send_message(chat_id, '–°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –ø–∞–Ω–µ–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –∫ –∫–∞–∫–æ–º—É –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤–∏–¥–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≤–∞—à.', reply_markup=create_keyboard8cac())
    state_storage.set_value(f'cac_ctb_del:{chat_id}', ctb.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')

def create_keyboard8cac():
    keyboard8cac = types.InlineKeyboardMarkup()
    keyboard8cac.row(types.InlineKeyboardButton('üè° –°—Ç–∞–ª–∏–Ω–∫–∞', callback_data='cac_stalin'), types.InlineKeyboardButton('üè° –•—Ä—É—â—ë–≤–∫–∞', callback_data='cac_hrush'), types.InlineKeyboardButton('üè° –ë—Ä–µ–∂–Ω–µ–≤–∫–∞', callback_data='cac_brezh'))
    keyboard8cac.row(types.InlineKeyboardButton('üè° –£–ª—É—á—à–µ–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', callback_data='cac_upgrade'), types.InlineKeyboardButton('üè° –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', callback_data='cac_standart'))
    keyboard8cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard8cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_ctoh'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard8cac

def cac_type_monolith(chat_id):
    mes_del = state_storage.get_value(f'cac_ctb_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\monolith\\mon_brick1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\monolith\\mon_brick2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–ú–æ–Ω–æ–ª–∏—Ç–Ω–æ-–∫–∏—Ä–ø–∏—á–Ω—ã–µ –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–µ –¥–æ–º–∞ ‚Äî —ç—Ç–æ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω–æ–≥–æ –∫–∞—Ä–∫–∞—Å–∞ –¥–ª—è –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ –∏ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —Å –∫–∏—Ä–ø–∏—á–Ω–æ–π –∫–ª–∞–¥–∫–æ–π –¥–ª—è –æ—Ç–ª–∏—á–Ω–æ–π —Ç–µ–ø–ª–æ- –∏ –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–∏. –≠—Ç–∏ –¥–æ–º–∞ –ø–æ–∑–≤–æ–ª—è—é—Ç –≥–∏–±–∫—É—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∫—É –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –≤–∫–ª—é—á–∞—è —Å–≤–æ–±–æ–¥–Ω—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –∏ –±–æ–ª—å—à–∏–µ –æ–∫–Ω–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ. –í—ã—Å–æ–∫–∞—è –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å, –¥–æ 150 –ª–µ—Ç, –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –¥–µ–ª–∞—é—Ç –∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –í–∞–∂–Ω–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é —è–≤–ª—è–µ—Ç—Å—è –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–Ω–∏–∂–∞—é—â–∞—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã."),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\monolith\\mon_block1.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\monolith\\mon_block2.jpg', 'rb') as img2:
        media = [InputMediaPhoto(img1, caption="–ö–∞—Ä–∫–∞—Å–Ω–æ-–±–ª–æ—á–Ω—ã–µ –¥–æ–º–∞ - —ç—Ç–æ —Ç–∏–ø —Å—Ç—Ä–æ–µ–Ω–∏–π, –≥–¥–µ –æ—Å–Ω–æ–≤—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å, –∞ —Å—Ç–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Ç–µ–ø–ª—è—é—Ç—Å—è –∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è –±–ª–æ–∫–∞–º–∏. –¢–∞–∫–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—á–Ω—ã–µ –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω—ã–µ –∑–¥–∞–Ω–∏—è, –æ–±–ª–∞–¥–∞—é—â–∏–µ —Ö–æ—Ä–æ—à–µ–π —Ç–µ–ø–ª–æ- –∏ –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–µ–π. –ú–æ–Ω–æ–ª–∏—Ç–Ω—ã–π –∫–∞—Ä–∫–∞—Å –æ—Ç–ª–∏–≤–∞–µ—Ç—Å—è –∏–∑ –±–µ—Ç–æ–Ω–Ω–æ–π –º–∞—Å—Å—ã, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω—É—é –±–µ—Å—à–æ–≤–Ω—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, —É—Å—Ç–æ–π—á–∏–≤—É—é –∫ –ø–æ–≥–æ–¥–Ω—ã–º —è–≤–ª–µ–Ω–∏—è–º –∏ —Å–µ–π—Å–º–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –í—ã—Å–æ–∫–∏–µ –ø–æ—Ç–æ–ª–∫–∏, —Å–≤–æ–±–æ–¥–Ω—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏. –ë–ª–æ–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è —Å—Ç–µ–Ω, –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ –ø–µ–Ω–æ–±–ª–æ–∫–∏ –∏–ª–∏ –≥–∞–∑–æ–±–µ—Ç–æ–Ω, —á—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–æ–±–∞–≤—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫"),
            InputMediaPhoto(img2)]
        bot.send_media_group(chat_id, media)
    ctm = bot.send_message(chat_id, '–°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –ø–∞–Ω–µ–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –∫ –∫–∞–∫–æ–º—É –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤–∏–¥–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≤–∞—à.', reply_markup=create_keyboard_cac9())
    state_storage.set_value(f'cac_ctm_del:{chat_id}', ctm.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')

def create_keyboard_cac9():
    keyboard9cac = types.InlineKeyboardMarkup()
    keyboard9cac.add(types.InlineKeyboardButton('üè°–ú–æ–Ω–æ–ª–∏—Ç–Ω–æ - –∫–∏—Ä–ø–∏—á–Ω—ã–π', callback_data='cac_mon_brick'))
    keyboard9cac.add(types.InlineKeyboardButton('üè°–ö–∞—Ä–∫–∞—Å–Ω–æ - –±–ª–æ—á–Ω—ã–π', callback_data='cac_mon_block'))
    keyboard9cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard9cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_ctoh'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard9cac

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–æ–º–∞
def cac_age_of_house(chat_id):
    msgs_del = ['cac_ctm_del', 'cac_ctp_del', 'cac_ctb_del', 'cac_cnore_del']
    for msg in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
               bot.delete_message (chat_id, mes_del)
            except:
                pass
        except:
            pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\age_of_house.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–∞')
    caoh = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard10cac())
    state_storage.set_value(f'cac_caoh_del:{chat_id}', caoh.message_id)
    update_state(chat_id, 'waiting_age_of_house')
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–æ–º–∞
@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_age_of_house')
def cac_age_of_house_handler(message):
    chat_id = message.chat.id
    mes_del = state_storage.get_value(f'cac_caoh_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    message_text = message.text
    try:
        year = int(message_text)
    except ValueError:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º')
        cac_age_of_house(chat_id)
    current_year = datetime.datetime.now().year
    if year >= 1900 and year <= current_year:
        bot.send_message(chat_id, f'–í—ã –≤–≤–µ–ª–∏ {year} –≥–æ–¥. –í–æ–∑—Ä–∞—Å—Ç –¥–æ–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {current_year - year} –≥–æ–¥–∞(–ª–µ—Ç).')
        cac_age = current_year - year
        cac_number_of_rooms_entry(chat_id)
        user_id = chat_id
        state_storage.set_value(f'cac_age:{chat_id}', cac_age)
    else:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å  –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É')
        cac_age_of_house(chat_id)
        
def create_keyboard10cac():
    keyboard10cac = types.InlineKeyboardMarkup()
    keyboard10cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard10cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_ctoh'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard10cac
    
# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç
def cac_number_of_rooms_entry(chat_id):
    msg_del = state_storage.get_value(f'cac_cta_del:{chat_id}')
    try:
        bot.delete_message (chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\rooms.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–°–∫–æ–ª—å–∫–æ –∫–æ–º–Ω–∞—Ç –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ?')
    cnore = bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=create_keyboard11cac())
    state_storage.set_value(f'cac_cnore_del:{chat_id}', cnore.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')
    
def create_keyboard11cac():
    keyboard11cac = types.InlineKeyboardMarkup()
    keyboard11cac.row(types.InlineKeyboardButton('üî¥ –î–æ–ª—è', callback_data='cac_share'), types.InlineKeyboardButton('üü† 1 –∫–æ–º–Ω', callback_data='cac_1room'), types.InlineKeyboardButton('üü° 2 –∫–æ–º–Ω', callback_data='cac_2room'))
    keyboard11cac.row(types.InlineKeyboardButton('üü¢ 3 –∫–æ–º–Ω', callback_data='cac_3room'), types.InlineKeyboardButton('üîµ 4 –∫–æ–º–Ω', callback_data='cac_4room'), types.InlineKeyboardButton('üü£ 5 –∏ 5+ –∫–æ–º–Ω–∞—Ç—ã', callback_data='cac_5room'))
    keyboard11cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard11cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_caoh'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard11cac

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤–≤–æ–¥–∞ –ø–ª–æ—â–∞–¥–∏
def cac_total_area(chat_id):
    update_state(chat_id, 'waiting_area_of_house')
    mes_del = state_storage.get_value(f'cac_cnore_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\area.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã')
    cta = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard12cac())
    state_storage.set_value(f'cac_cta_del:{chat_id}', cta.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–ª–æ—â–∞–¥–∏
@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_area_of_house')
def cac_total_area_handler(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'cac_cr_del:{chat_id}')
    try:
        bot.delete_message (chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    mes_del = state_storage.get_value(f'cac_cta_del:{chat_id}')
    max_area = 999
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    message_text = message.text
    try:
        message_text = message_text.replace(",", ".")
        area = float(message_text)
        area = round(area, 2)
        if area >= 1 and area <= max_area:
            bot.send_message(chat_id, f'–í—ã –≤–≤–µ–ª–∏ {area} –º¬≤.')
            user_id = chat_id
            state_storage.set_value(f'area:{chat_id}', area)
            cac_repair(chat_id)
        else:
            bot.send_message(chat_id, '–û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å  –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É')
            cac_total_area(chat_id)
    except ValueError:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å  –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É')
        cac_total_area(chat_id)

def create_keyboard12cac():
    keyboard12cac = types.InlineKeyboardMarkup()
    keyboard12cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard12cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_cnore'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard12cac

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–º–æ–Ω—Ç–∞
def cac_repair(chat_id):
    msg_del = state_storage.get_value(f'cac_caor_del:{chat_id}')
    try:
        bot.delete_message (chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\remont\\chern.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\remont\\need_rem.jpg', 'rb') as img2, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\remont\\cosmetic.jpg', 'rb') as img3, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\remont\\good.jpg', 'rb') as img4, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\remont\\design.jpg', 'rb') as img5:
        media = [InputMediaPhoto(img1, caption="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–º–æ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞\n\n –ß–µ—Ä–Ω–æ–≤–∞—è \n\n –ù—É–∂–¥–∞–µ—Ç—Å—è –≤ —Ä–µ–º–æ–Ω—Ç–µ \n\n –¢–æ–ª—å–∫–æ –∫–æ—Å–º–µ—Ç–∏–∫–∞ \n\n –•–æ—Ä–æ—à–∏–π \n\n –û—Ç–ª–∏—á–Ω—ã–π \n\n –î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–π"),
            InputMediaPhoto(img2),
            InputMediaPhoto(img3),
            InputMediaPhoto(img4),
            InputMediaPhoto(img5)
            ]
        bot.send_media_group(chat_id, media)
    cr = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac13())
    state_storage.set_value(f'cac_cr_del:{chat_id}', cr.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')

def create_keyboard_cac13():
    keyboard13cac = types.InlineKeyboardMarkup()
    keyboard13cac.add(types.InlineKeyboardButton('–ù—É–∂–¥–∞–µ—Ç—Å—è –≤ —Å–µ—Ä—å—ë–∑–Ω–æ–º —Ä–µ–º–æ–Ω—Ç–µ', callback_data='cac_price_big_repair'))
    keyboard13cac.add(types.InlineKeyboardButton('–ß–µ—Ä–Ω–æ–≤–∞—è –æ—Ç–¥–µ–ª–∫–∞', callback_data='cac_price_finishing'))
    keyboard13cac.add(types.InlineKeyboardButton('–ù—É–∂–¥–∞–µ—Ç—Å—è –≤ –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–º–æ–Ω—Ç–µ', callback_data='cac_price_cosmetic'))
    keyboard13cac.row(types.InlineKeyboardButton('–•–æ—Ä–æ—à–∏–π —Ä–µ–º–æ–Ω—Ç', callback_data='cac_price_good'), types.InlineKeyboardButton('–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–º–æ–Ω—Ç', callback_data='cac_price_perfect'))
    keyboard13cac.add(types.InlineKeyboardButton('–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç',  callback_data='cac_price_design'))
    keyboard13cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard13cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_cta'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard13cac

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞
def cac_age_of_repair(chat_id):
    msgs_del = ['cac_cpf_del','cac_cr_del']
    for msg in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message (chat_id, mes_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    update_state(chat_id, 'waiting_age_of_repair')
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\age_of_repair.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–º–æ–Ω—Ç–∞, –≤ –≥–æ–¥–∞—Ö')
    caor = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard14cac())
    state_storage.set_value(f'cac_caor_del:{chat_id}', caor.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞
@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_age_of_repair')
def cac_age_of_repair_handler(message):
    chat_id = message.chat.id
    mes_del = state_storage.get_value(f'cac_caor_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    message_age_repair = message.text
    try:
        age_repair = int(message_age_repair)
    except ValueError:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, –Ω–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º')
        cac_age_of_repair(chat_id)
    if age_repair < 0:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, —á–∏—Å–ª–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º')
        cac_age_of_repair(chat_id)
    elif age_repair > 10:
        cac_repair_coef = 0.3
        bot.send_message(chat_id, f'–í—ã –≤–≤–µ–ª–∏ {age_repair} –≥–æ–¥–∞(–ª–µ—Ç).')
        cac_price_furniture(chat_id)
        user_id = chat_id
        state_storage.set_value(f'cac_repair_coef:{chat_id}', cac_repair_coef)
        cac_price_furniture(chat_id)
    else:
        cac_repair_coef = 0.01 + 0.03 * age_repair
        bot.send_message(chat_id, f'–í—ã –≤–≤–µ–ª–∏ {age_repair} –≥–æ–¥–∞(–ª–µ—Ç).')
        user_id = chat_id
        state_storage.set_value(f'cac_repair_coef:{chat_id}', cac_repair_coef)
        cac_price_furniture(chat_id)
        
def create_keyboard14cac():
    keyboard14cac = types.InlineKeyboardMarkup()
    keyboard14cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard14cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_cr'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard14cac

# –§—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ–±–µ–ª–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∏
def cac_price_furniture(chat_id):
    update_state(chat_id, 'waiting_price_of_furniture')
    with open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\furniture\\kitchen.jpg', 'rb') as img1, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\furniture\\bathroom.jpg', 'rb') as img2, \
        open('C:\\Users\\Admin\\Desktop\\bot_real_estate\\content\\calc_cac\\furniture\\tv.jpg', 'rb') as img3:
        media = [InputMediaPhoto(img1, caption="–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ–±–µ–ª–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å."),
            InputMediaPhoto(img2),
            InputMediaPhoto(img3)]
        bot.send_media_group(chat_id, media)
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤')
    cpf = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard15cac())
    state_storage.set_value(f'cac_cpf_del:{chat_id}', cpf.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_in_progress')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ–±–µ–ª–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∏
@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_price_of_furniture')
def cac_price_furniture_handler(message):
    chat_id = message.chat.id
    mes_del = state_storage.get_value(f'cac_cpf_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    user_id = chat_id
    message_furniture_cost = message.text
    try:
        furniture_price = int(message_furniture_cost)
    except ValueError:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º')
        cac_price_furniture(chat_id)
    if furniture_price < 0:
        bot.send_message(chat_id, '–û—à–∏–±–∫–∞, —á–∏—Å–ª–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º')
        cac_price_furniture(chat_id)
    else:
        state_storage.set_value(f'furniture_cost:{chat_id}', furniture_price)
        cac_repair_coef = state_storage.get_value(f'cac_repair_coef:{chat_id}')
        area = state_storage.get_value(f'area:{chat_id}')
        chosen_region_name = state_storage.get_value(f'chosen_region_name:{chat_id}')
        chosen_street_name = state_storage.get_value(f'chosen_street_name:{chat_id}')
        house_info1 = state_storage.get_value(f'house_info1:{chat_id}')
        house_info2 = state_storage.get_value(f'house_info2:{chat_id}')
        cac_age = state_storage.get_value(f'cac_age:{chat_id}')
        number_of_rooms = state_storage.get_value(f'number_of_rooms:{chat_id}')
        price_of_finishing = state_storage.get_value(f'price_of_finishing:{chat_id}')
        with Session() as session_furniture_cost:
            user = session_furniture_cost.query(CacUserData).filter_by(user_id=user_id).first()
            user.furniture_cost = furniture_price
            user.repair_coef = cac_repair_coef
            user.area = area
            user.chosen_region_name = chosen_region_name
            user.chosen_street_name = chosen_street_name
            user.house_info1 = house_info1
            user.house_info2 = house_info2        
            user.cac_age = cac_age
            user.number_of_rooms = number_of_rooms
            user.price_of_finishing = price_of_finishing
            session_furniture_cost.commit()
        cac_calculate_results(chat_id)

def create_keyboard15cac():
    keyboard15cac = types.InlineKeyboardMarkup()
    keyboard15cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard15cac.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='cac_back_to_caor'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='cac_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard15cac

def cac_calculate_results(chat_id):
    msg_del = state_storage.get_value(f'cac_greet_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    state_storage.set_value(f'reminder_states:{chat_id}', 'cac_completed')
    msgs_del = ['cac_cpf_del', 'cac_greet_del']
    for msg in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message (cac_greet_del['chat_id'], cac_greet_del['message_id'])
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
             pass
    # –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –î–ê–ù–ù–´–ï
    # –°–æ–∑–¥–∞—ë–º –∫–æ—Ä—Ç–µ–∂–∏ —Å —Ü–µ–Ω–∞–º–∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–æ–≤
    price_panel_brezh = (625, 675)
    price_panel_hruzh = (600, 650)
    price_panel_standart_project = (700, 725)
    price_panel_upgrade = (675, 700)
    price_brick_stalin = (750, 800)
    price_brick_hruzh = (650, 675)
    price_brick_brezh = (675, 700)
    price_brick_standart = (725, 750)
    price_brick_upgrade = (750, 775)
    price_monolith_brick = (750, 800)
    price_monolith_frame_and_block = (725, 775)
    price_monolith_panel = (700, 750)
    # –°–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–∫–∏, —Ö—Ä–∞–Ω—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ–¥–æ–º –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—Å—á—ë—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    lifespan_panel = int(100)
    lifespan_brick = int(125)
    lifespan_monolith = int(150)
    cac_house_depr_coef = int(0)
    # –°–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é
    kad_price_average_minsk = int(184)
    # –î–ê–ù–ù–ù–´–ï –û –°–¢–û–ò–ú–û–°–¢–ò –û–ë–™–ï–ö–¢–û–í –ü–û –í–ò–î–£ –ò–• –†–ï–ú–û–ù–¢–ê
    # –ß–µ—Ä–Ω–æ–≤–∞—è –æ—Ç–¥–µ–ª–∫–∞
    price_finishing_m2 = (115, 130)
    # –ù—É–∂–¥–∞–µ—Ç—Å—è –≤ —Å–µ—Ä—å—ë–∑–Ω–æ–º —Ä–µ–º–æ–Ω—Ç–µ
    price_big_repair_m2 = (90, 105)
    # –ù—É–∂–¥–∞–µ—Ç—Å—è –≤ –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–º–æ–Ω—Ç–µ
    price_cosmetic_m2 = (135, 150)
    # –•–æ—Ä–æ—à–∏–π —Ä–µ–º–æ–Ω—Ç
    price_good_m2 = (175, 190)
    # –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–º–æ–Ω—Ç
    price_perfect_m2 = (195, 210)
    # –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç
    price_design_m2 = (265, 285)
    min_cac_flat_cost = 0
    max_cac_flat_cost = 0
    av_cac_flat_cost = 0
    user_id = chat_id
    try:
        with Session() as session_results2:
            user = session_results2.query(CacUserData).filter(CacUserData.user_id == user_id).one()
            chosen_region_name = user.chosen_region_name
            chosen_street_name = user.chosen_street_name
            house_info1 = user.house_info1
            house_info2 = user.house_info2
            number_of_rooms = user.number_of_rooms
            cac_age = user.cac_age
            area = user.area
            price_of_finishing = user.price_of_finishing
            repair_coef = user.repair_coef
            furniture_cost = user.furniture_cost
            session_results2.commit()
        user_data_check = True
    except Exception as e:
        user_data_check = False
    try:
    	# –†–∞–π–æ–Ω
        # –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö –ë–î
        
        query_region_results2 = f"SELECT deals FROM regions{number_of_rooms} WHERE region_name = '{chosen_region_name}'"
        query_region_results2 = text(query_region_results2)
        with Session() as session_region_results2:
            result = session_region_results2.execute(query_region_results2)
        rows = result.fetchall()
        strings = [row[0] for row in rows]
        lists = [re.findall(r'\d+', string) for string in strings]
        lists = [[int(num) for num in lst] for lst in lists]
        comp_list1 = []
        for lst in lists:
          comp_list1.extend(lst)
        for value in comp_list1[:]:
            if value > 3500 or value < 600:
                comp_list1.remove(value)
        values = np.array(comp_list1)
        values.sort()
        mu = np.mean(values)
        sigma = np.std(values)
        weights = np.array([1 / (sigma * math.sqrt(2 * math.pi)) * math.exp(- (x - mu) ** 2 / (2 * sigma ** 2)) for x in values])
        weighted_mean1 = np.average(values, weights=weights)
        weighted_sum = np.sum(weights * (values - weighted_mean1) ** 2)
        weighted_sum_weights = np.sum(weights)
        weighted_std_dev1 = math.sqrt(weighted_sum / weighted_sum_weights)
        comp_high1 = int(weighted_std_dev1 + weighted_mean1)
        comp_low1 = int(- weighted_std_dev1 + weighted_mean1)
        #–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
        data = values
        if number_of_rooms == 0:
          left_bound = np.quantile(data, 0.184)
          middle_bound = np.quantile(data, 0.348)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 1:
          left_bound = np.quantile(data, 0.34)
          middle_bound = np.quantile(data, 0.58)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 2:
          left_bound = np.quantile(data, 0.28)
          middle_bound = np.quantile(data, 0.47)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 3:
          left_bound = np.quantile(data, 0.37)
          middle_bound = np.quantile(data, 0.61)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 4:
          left_bound = np.quantile(data, 0.239)
          middle_bound = np.quantile(data, 0.49)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 5:
          left_bound = np.quantile(data, 0.22)
          middle_bound = np.quantile(data, 0.47)
          right_bound = np.quantile(data, 1)
        left = data[data < left_bound]
        middle = data[(left_bound <= data) & (data < middle_bound)]
        right = data[data >= middle_bound]
        fig, ax = plt.subplots()
        n, bins, patches = ax.hist(data, bins=100, edgecolor='black', color='white')
        colors_dict = {(-np.inf, left_bound): 'red',
                    (left_bound, middle_bound): '#DAB71A',
                    (middle_bound, right_bound): 'green'}
        alphas = [0.65, 0.6, 0.75]
        for i, patch in enumerate(patches):
            color = 'white'
            alpha = 1
            for j, ((low, high), c) in enumerate(colors_dict.items()):
                if low <= bins[i] < high:
                    color = c
                    alpha = alphas[j]
                    break
            patch.set_facecolor(color)
            patch.set_alpha(alpha)
        plt.xlabel('–¶–µ–Ω–∞ –º¬≤')
        plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö')
        if number_of_rooms == 0:
          plt.title(' –í—Å–µ —Ä–∞–π–æ–Ω—ã, –î–æ–ª—è')
        else:
          plt.title(f'{chosen_region_name}, {number_of_rooms} –∫–æ–º–Ω')
        colors = ['red', '#DAB71A', 'green']
        labels = ['–ù–∏–∑–∫–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–í—ã—Å–æ–∫–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å']
        handles = [plt.Rectangle((0,0),1,1, color=c, alpha=a) for c, a in zip(colors, alphas)]
        plt.legend(handles, labels, loc='upper right')
        plt.savefig(f'C:\\Users/Admin/Desktop/bot_real_estate/bot/region_minsk_{chat_id}.jpg')
        q1, q3 = np.percentile(comp_list1, [25, 75])
        iqr1 = q3 - q1
        h1 = (2 * iqr1) / (len(comp_list1) ** (1/3))
        h1 = round(h1)
        interval_width1 = h1
        intervals1 = list(range(min(comp_list1), max(comp_list1) + interval_width1, interval_width1))
        counts1 = []
        for interval1 in intervals1:
            count1 = sum(1 for price in comp_list1 if interval1 <= price < interval1 + interval_width1)
            counts1.append(count1)
        comp_max_count1 = max(counts1)
        comp_max_index1 = counts1.index(comp_max_count1)
        comp_interval_mode1 = intervals1[comp_max_index1] + interval_width1 / 2
        comp_flat_max1 = int(comp_high1 * area)
        comp_flat_min1 = int(comp_low1 * area)
        comp_flat_av1 = int(comp_interval_mode1 * area)
    except Exception as e:
        comp_high1 = 0
        comp_low1 = 0
        comp_interval_mode1 = 0
    try:
        # –£–õ–ò–¶–ê
        query_street_result2 = f"SELECT deals FROM streets{number_of_rooms} WHERE street_name = '{chosen_street_name}'"
        query_street_result2 = text(query_street_result2)
        with Session() as session_streets_result2:
            result = session_streets_result2.execute(query_street_result2)
        rows = result.fetchall()
        strings = [row[0] for row in rows]
        lists = [re.findall(r'\d+', string) for string in strings]
        lists = [[int(num) for num in lst] for lst in lists]
        comp_list2 = []
        for lst in lists:
          comp_list2.extend(lst)
        for value in comp_list2[:]:
            if value > 3500 or value < 600:
              comp_list2.remove(value)
        values = np.array(comp_list2)
        values.sort()
        mu = np.mean(values)
        sigma = np.std(values)
        weights = np.array([1 / (sigma * math.sqrt(2 * math.pi)) * math.exp(- (x - mu) ** 2 / (2 * sigma ** 2)) for x in values])
        weighted_mean2 = np.average(values, weights=weights)
        weighted_sum = np.sum(weights * (values - weighted_mean2) ** 2)
        weighted_sum_weights = np.sum(weights)
        weighted_std_dev2 = math.sqrt(weighted_sum / weighted_sum_weights)
        comp_high2 = int(weighted_std_dev2 + weighted_mean2)
        comp_low2 = int(- weighted_std_dev2 + weighted_mean2)
        data = values
        if number_of_rooms == 0:
          left_bound = np.quantile(data, 0.184)
          middle_bound = np.quantile(data, 0.348)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 1:
          left_bound = np.quantile(data, 0.34)
          middle_bound = np.quantile(data, 0.58)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 2:
          left_bound = np.quantile(data, 0.28)
          middle_bound = np.quantile(data, 0.47)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 3:
          left_bound = np.quantile(data, 0.37)
          middle_bound = np.quantile(data, 0.61)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 4:
          left_bound = np.quantile(data, 0.239)
          middle_bound = np.quantile(data, 0.49)
          right_bound = np.quantile(data, 1)
        elif number_of_rooms == 5:
          left_bound = np.quantile(data, 0.22)
          middle_bound = np.quantile(data, 0.47)
          right_bound = np.quantile(data, 1)
        left = data[data < left_bound]
        middle = data[(left_bound <= data) & (data < middle_bound)]
        right = data[data >= middle_bound]
        fig, ax = plt.subplots()
        n, bins, patches = ax.hist(data, bins=100, edgecolor='black', color='white')
        colors_dict = {(-np.inf, left_bound): 'red',
                    (left_bound, middle_bound): '#DAB71A',
                    (middle_bound, right_bound): 'green'}
        alphas = [0.65, 0.6, 0.75]
        for i, patch in enumerate(patches):
            color = 'white'
            alpha = 1
            for j, ((low, high), c) in enumerate(colors_dict.items()):
                if low <= bins[i] < high:
                    color = c
                    alpha = alphas[j]
                    break
            patch.set_facecolor(color)
            patch.set_alpha(alpha)
        plt.xlabel('–¶–µ–Ω–∞ –º¬≤')
        plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö')
        if number_of_rooms == 0:
          plt.title(f'{chosen_street_name}, –î–æ–ª—è')
        else:
          plt.title(f'{chosen_street_name}, {number_of_rooms} –∫–æ–º–Ω')
        colors = ['red', '#DAB71A', 'green']
        labels = ['–ù–∏–∑–∫–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', '–í—ã—Å–æ–∫–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å']
        handles = [plt.Rectangle((0,0),1,1, color=c, alpha=a) for c, a in zip(colors, alphas)]
        plt.legend(handles, labels, loc='upper right')
        plt.savefig(f'C:/Users/Admin/Desktop/bot_real_estate/bot/street_{chat_id}.jpg')
        q1, q3 = np.percentile(comp_list1, [25, 75])
        iqr2 = q3 - q1
        h2 = (2 * iqr2) / (len(comp_list2) ** (1/3))
        h2 = round(h2)
        interval_width2 = h2
        intervals2 = list(range(min(comp_list2), max(comp_list2) + interval_width2, interval_width2))
        counts2 = []
        for interval2 in intervals2:
            count2 = sum(1 for price in comp_list2 if interval2 <= price < interval2 + interval_width2)
            counts2.append(count2)
        comp_max_count2 = max(counts2)
        comp_max_index2 = counts2.index(comp_max_count2)
        comp_interval_mode2 = intervals2[comp_max_index2] + interval_width2 / 2
        comp_flat_max2 = int(comp_high2 * area)
        comp_flat_min2 = int(comp_low2 * area)
        comp_flat_av2 = int(comp_interval_mode2 * area)
    except Exception as e:
        comp_low2 = 0
        comp_high2 = 0
        comp_interval_mode2 =0
        comp_flat_max2 = 0
        comp_flat_min2 = 0
        comp_flat_av2 =0
    try:
        if house_info1 == "panel" and house_info2 == "hrush":
          cost_min_house_price = int(price_panel_hruzh[0])
          cost_max_house_price = int(price_panel_hruzh[1])
        elif house_info1 == "panel" and house_info2 == "brezh":
          cost_min_house_price = int(price_panel_brezh[0])
          cost_max_house_price = int(price_panel_brezh[1])
        elif house_info1 == "panel" and house_info2 == "standart":
          cost_min_house_price = int(price_panel_standart_project[0])
          cost_max_house_price = int(price_panel_standart_project[1])
        elif house_info1 == "panel" and house_info2 == "upgrade":
          cost_min_house_price = int(price_panel_upgrade[0])
          cost_max_house_price = int(price_panel_upgrade[1])
        elif house_info1 == "brick" and house_info2 == "stalin":
          cost_min_house_price = int(price_brick_stalin[0])
          cost_max_house_price = int(price_brick_stalin[1])
        elif house_info1 == "brick" and house_info2 == "hrush":
          cost_min_house_price = int(price_brick_hruzh[0])
          cost_max_house_price = int(price_brick_hruzh[1])
        elif house_info1 == "brick" and house_info2 == "brezh":
          cost_min_house_price = int(price_brick_brezh[0])
          cost_max_house_price = int(price_brick_brezh[1])
        elif house_info1 == "brick" and house_info2 == "standart":
          cost_min_house_price = int(price_brick_standart[0])
          cost_max_house_price = int(price_brick_standart[1])
        elif house_info1 == "brick" and house_info2 == "upgrade":
          cost_min_house_price = int(price_brick_upgrade[0])
          cost_max_house_price = int(price_brick_upgrade[1])
        elif house_info1 == "monolith" and house_info2 == "mon_brick":
          cost_min_house_price = int(price_monolith_brick[0])
          cost_max_house_price = int(price_monolith_brick[1])
        elif house_info1 == "monolith" and house_info2 == "mon_panel":
          cost_min_house_price = int(price_monolith_panel[0])
          cost_max_house_price = int(price_monolith_panel[1])
        elif house_info1 == "monolith" and house_info2 == "mon_block":
          cost_min_house_price = int(price_monolith_frame_and_block[0])
          cost_max_house_price = int(price_monolith_frame_and_block[1])
        if house_info1 == "panel":
          cost_house_depr_coef = cac_age / lifespan_panel
          if cost_house_depr_coef > 0.4:
            cost_house_depr_coef = 0.4
        elif house_info1 == "brick":
          cost_house_depr_coef = cac_age / lifespan_brick
          if cost_house_depr_coef > 0.4:
            cost_house_depr_coef = 0.4
        elif house_info1 == "monolith":
          cost_house_depr_coef = cac_age / lifespan_monolith
          if cost_house_depr_coef > 0.4:
            cost_house_depr_coef = 0.4
        if price_of_finishing == "price_finishing":
          min_cost_price_of_finishing = int(price_finishing_m2[0])
          max_cost_price_of_finishing = int(price_finishing_m2[1])
        elif price_of_finishing == "price_big_repair":
          min_cost_price_of_finishing = int(price_big_repair_m2[0])
          max_cost_price_of_finishing = int(price_big_repair_m2[1])
        elif price_of_finishing == "price_cosmetic":
          min_cost_price_of_finishing = int(price_cosmetic_m2[0])
          max_cost_price_of_finishing = int(price_cosmetic_m2[1])
        elif price_of_finishing == "price_good":
          min_cost_price_of_finishing = int(price_good_m2[0])
          max_cost_price_of_finishing = int(price_good_m2[1])
        elif price_of_finishing == "price_perfect":
          min_cost_price_of_finishing = int(price_perfect_m2[0])
          max_cost_price_of_finishing = int(price_perfect_m2[1])
        elif price_of_finishing == "price_design":
          min_cost_price_of_finishing = int(price_design_m2[0])
          max_cost_price_of_finishing = int(price_design_m2[1])
        if chosen_region_name == "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (343 / 234)
        elif chosen_region_name == "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (273 / 234)
        elif chosen_region_name == "–°–æ–≤–µ—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (283 / 234)
        elif chosen_region_name == "–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (253 / 234)
        elif chosen_region_name == "–ü–∞—Ä—Ç–∏–∑–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (238 / 234)
        elif chosen_region_name == "–ó–∞–≤–æ–¥—Å–∫–æ–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk
        elif chosen_region_name == "–õ–µ–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (254 / 234)
        elif chosen_region_name == "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (257 / 234)
        elif chosen_region_name == "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω":
          cost_cad_price = kad_price_average_minsk * (265 / 234)
        min_flat_cost_price = int(((cost_min_house_price - (cost_min_house_price * cost_house_depr_coef)) + (min_cost_price_of_finishing - (min_cost_price_of_finishing * repair_coef)) + cost_cad_price) * area + furniture_cost)
        max_flat_cost_price = int(((cost_max_house_price - (cost_max_house_price * cost_house_depr_coef)) + (max_cost_price_of_finishing - (max_cost_price_of_finishing * repair_coef)) + cost_cad_price) * area + furniture_cost)
        av_flat_cost_price = int((max_flat_cost_price + min_flat_cost_price) / 2)        
    except Exception as e:
        min_flat_cost_price = 0
        av_flat_cost_price = 0
        max_flat_cost_price = 0
       # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—Å—á—ë—Ç 
    try:
        if user_data_check == False:
            # –û—à–∏–±–∫–∞
            bot.send_message(chat_id, 'üò±–û–ø–∞–Ω—å–∫–∏, –ø–æ—Ö–æ–∂–µ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã.üò±\n –ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å—Å—á—ë—Ç–∞ —Ä–∞–Ω—å—à–µ, —Ç–æ –Ω—É–∂–Ω–æ –µ–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, \n —è –Ω–µ –º–æ–≥—É –≤–∑—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–π –æ –≤–∞—à–µ–º –æ–±—ä–µ–∫—Ç–µ –∏–∑ –≤–æ–∑–¥—É—Ö–∞. \n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å—Å—á—ë—Ç–∞, \n —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞—Ç—å. üòÅ')
            send_greeting_cac(chat_id)
        elif comp_high1 == 0 and comp_low1 == 0 and comp_interval_mode1 == 0:
            bot.send_message(chat_id, f'–û—à–∏–±–∫–∞, –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–¥–µ–ª–∫–∞—Ö –ø–æ {chosen_region_name}. \n –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ä–∞–±–æ—Ç—ã, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.')
            send_greeting_cac(chat_id)
        elif comp_low2 == 0 and comp_high2 == 0 and comp_interval_mode2 == 0:
            # –ó–∞—Ç—Ä–∞—Ç–Ω—ã–π
            bot.send_message(chat_id, f'** –ó–ê–¢–†–ê–¢–ù–´–ô –ê–ù–ê–õ–ò–ó –°–¢–û–ò–ú–û–°–¢–ò –û–ë–™–ï–ö–¢–ê ** \n\n –ò—Å—Ö–æ–¥—è –∏–∑ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –≤–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω —Ä–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞. \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–∏–∞–ø–æ–∑–æ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏, –±–µ–∑ —É—á—ë—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {min_flat_cost_price} ‚Äî {max_flat_cost_price}', parse_mode='markdown')
            # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω
            with open(f'C:/Users/Admin/Desktop/bot_real_estate/bot/region_minsk_{chat_id}.jpg', 'rb') as img_region:
              bot.send_photo(chat_id, img_region, caption=f'** –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó \n –î–ê–ù–ù–´–ï –°–î–ï–õ–û–ö, {chosen_region_name.upper()} **\n\n –¶–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è —á–∞—â–µ –≤—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ($/–º2): {comp_interval_mode1} \n –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞, –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ($/–º2): {min(values)} \n –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞, –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ($/–º2): {max(values)} \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–æ–∑–æ–Ω, –±–µ–∑ —É—á—ë—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –≤–∞—à–µ–π —É–ª–∏—Ü–µ(–æ–±—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑): {int(comp_low1 * area)} ‚Äî {int(comp_high1 * area)}', parse_mode='markdown')
            os.remove(f'C:/Users/Admin/Desktop/bot_real_estate/bot/region_minsk_{chat_id}.jpg')              
            bot.send_message(chat_id, f"–û—à–∏–±–∫–∞, –Ω–µ—Ç —Å–¥–µ–ª–æ–∫ –Ω–∞ —É–ª. {chosen_street_name} –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º. \n –í–Ω–∏–º–∞–Ω–∏–µ, —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—Å—á—ë—Ç–∞ —Å–Ω–∏–∂–µ–Ω–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.")
            min_cac_flat_cost = int((min_flat_cost_price + (comp_flat_min1 * 5)) / 6)
            max_cac_flat_cost = int((max_flat_cost_price + (comp_flat_max1 * 7)) / 8)
            av_cac_flat_cost = int((av_flat_cost_price + (comp_flat_av1 * 5)) / 6)
            cac_all = [min_cac_flat_cost, max_cac_flat_cost, av_cac_flat_cost, min_flat_cost_price, comp_flat_min1, max_flat_cost_price, comp_flat_max1, av_flat_cost_price, comp_flat_av1]
            cac_all_dev = statistics.stdev(cac_all)
            cac_all_max_price = av_cac_flat_cost + cac_all_dev
            cac_all_min_price = av_cac_flat_cost - cac_all_dev
            bot.send_message(chat_id, f'** –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó –°–¢–û–ò–ú–û–°–¢–ò –û–ë–™–ï–ö–¢–ê ** \n\n –ò—Å—Ö–æ–¥—è –∏–∑ –≤—Å–µ—Ö –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤ –∏ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –≤–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω —Ä–∞—Å—Å—á–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–µ–º–ª–µ–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏. \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞: {cac_all_min_price} ‚Äî {cac_all_max_price}\n–í–ù–ò–ú–ê–ù–ò–ï!!! –°—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –∏–∑-–∑–∞ —Å–º–µ–Ω—ã —Ä—ã–Ω–æ—á–Ω–æ–π –∫–æ–Ω—å—é–∫—Ç—É—Ä—ã(–∫–∞–∫ –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É, —Ç–∞–∫ –∏ –ø—Ä–æ—Ç–∏–≤ –≤–∞—Å)', parse_mode='Markdown')
            msg1489 = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac17())
            state_storage.set_value(f'cac_ccr_del:{chat_id}', msg1489.message_id)
        else:
            # –ó–∞—Ç—Ä–∞—Ç–Ω—ã–π
            bot.send_message(chat_id, f'** –ó–ê–¢–†–ê–¢–ù–´–ô –ê–ù–ê–õ–ò–ó –°–¢–û–ò–ú–û–°–¢–ò –û–ë–™–ï–ö–¢–ê ** \n\n –ò—Å—Ö–æ–¥—è –∏–∑ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –≤–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω —Ä–∞—Å—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞. \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–∏–∞–ø–æ–∑–æ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏, –±–µ–∑ —É—á—ë—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {min_flat_cost_price} ‚Äî {max_flat_cost_price}', parse_mode='markdown')
            # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω
            with open(f'C:/Users/Admin/Desktop/bot_real_estate/bot/region_minsk_{chat_id}.jpg', 'rb') as img_region:
              bot.send_photo(chat_id, img_region, caption=f'** –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó \n –î–ê–ù–ù–´–ï –°–î–ï–õ–û–ö, {chosen_region_name.upper()} **\n\n –¶–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è —á–∞—â–µ –≤—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ($/–º2): {comp_interval_mode1} \n –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞, –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ($/–º2): {min(values)} \n –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞, –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ($/–º2): {max(values)} \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–æ–∑–æ–Ω, –±–µ–∑ —É—á—ë—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –≤–∞—à–µ–π —É–ª–∏—Ü–µ(–æ–±—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑): {int(comp_low1 * area)} ‚Äî {int(comp_high1 * area)}', parse_mode='markdown')
            os.remove(f'C:/Users/Admin/Desktop/bot_real_estate/bot/region_minsk_{chat_id}.jpg')              
            # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —É–ª–∏—Ü–∞
            with open(f'C:/Users/Admin/Desktop/bot_real_estate/bot/street_{chat_id}.jpg', 'rb') as img_street:
              bot.send_photo(chat_id, img_street, caption=f'** –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó \n –î–ê–ù–ù–´–ï –°–î–ï–õ–û–ö, {chosen_street_name.upper()}**\n\n –¶–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è —á–∞—â–µ –≤—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É–ª–∏—Ü–µ($/–º2): {comp_interval_mode2} \n –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞, –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É–ª–∏—Ü–µ($/–º2): {min(values)} \n –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞, –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É–ª–∏—Ü–µ($/–º2): {max(values)} \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–æ–∑–æ–Ω, –±–µ–∑ —É—á—ë—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ —Ä–∞–π–æ–Ω–∞ –∏ —Ä–µ–º–æ–Ω—Ç–∞(–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑): {int(comp_low2 * area)} ‚Äî {int(comp_high2 * area)}', parse_mode='Markdown')
            os.remove(f'C:/Users/Admin/Desktop/bot_real_estate/bot/street_{chat_id}.jpg')
            min_cac_flat_cost = int((min_flat_cost_price + comp_flat_min2 + (comp_flat_min1 * 5)) / 7)
            max_cac_flat_cost = int((max_flat_cost_price + comp_flat_max2 + (comp_flat_max1 * 7)) / 9)
            av_cac_flat_cost = int((av_flat_cost_price + comp_flat_av2 + (comp_flat_av1 * 5)) / 7) 
            cac_all = [min_cac_flat_cost, max_cac_flat_cost, av_cac_flat_cost, min_flat_cost_price, comp_flat_min2, comp_flat_min1, max_flat_cost_price, comp_flat_max2, comp_flat_max1, av_flat_cost_price, comp_flat_av2, comp_flat_av1]
            cac_all_dev = statistics.stdev(cac_all)
            cac_all_max_price = av_cac_flat_cost + cac_all_dev
            cac_all_min_price = av_cac_flat_cost - cac_all_dev
            bot.send_message(chat_id, f'** –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó –°–¢–û–ò–ú–û–°–¢–ò –û–ë–™–ï–ö–¢–ê **  \n\n –ò—Å—Ö–æ–¥—è –∏–∑ –≤—Å–µ—Ö –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤ –∏ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –≤–∞–º–∏ –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω —Ä–∞—Å—Å—á–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–µ–º–ª–µ–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞: \n –¢–æ—á–∫–∞ —ç–∫–≤–∏–ª–∏–±—Ä–∏—É–º–∞: {int(av_cac_flat_cost)} \n –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞: {int(cac_all_min_price)} ‚Äî {int(cac_all_max_price)}\n **–í–ù–ò–ú–ê–ù–ò–ï!!!** –°—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –∏–∑-–∑–∞ —Å–º–µ–Ω—ã —Ä—ã–Ω–æ—á–Ω–æ–π –∫–æ–Ω—å—é–∫—Ç—É—Ä—ã(–∫–∞–∫ –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É, —Ç–∞–∫ –∏ –ø—Ä–æ—Ç–∏–≤ –≤–∞—Å)', parse_mode='Markdown')
            msg1488 = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_cac17())
            state_storage.set_value(f'cac_ccr_del:{chat_id}', msg1488.message_id)
    except Exception as e:
        # –û—à–∏–±–∫–∞
        bot.send_message(chat_id, 'üò± –û–ø–∞–Ω—å–∫–∏, –ø–æ—Ö–æ–∂–µ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã.üò±\n –ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å—Å—á—ë—Ç–∞ —Ä–∞–Ω—å—à–µ, —Ç–æ –Ω—É–∂–Ω–æ –µ–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, \n —è –Ω–µ –º–æ–≥—É –≤–∑—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–π –æ –≤–∞—à–µ–º –æ–±—ä–µ–∫—Ç–µ –∏–∑ –≤–æ–∑–¥—É—Ö–∞. \n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å—Å—á—ë—Ç–∞, \n —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞—Ç—å. üòÅ')
        send_greeting_cac(chat_id)

def create_keyboard_cac17():
    keyboard17cac = types.InlineKeyboardMarkup()
    keyboard17cac.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    keyboard17cac.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard17cac

# –†–ï–°–¢–ê–†–¢
def cac_func_restart(chat_id):
    msgs_del =['cac_region_choice_del', 'cac_fin_street_choice_del', 'cac_chn_del',
               'cac_ctoh_del', 'cac_ctm_del', 'cac_ctp_del',
               'cac_ctb_del', 'cac_caoh_del', 'cac_cnore_del',
               'cac_cta_del', 'cac_cpf_del', 'cac_ccr_del']
    for mes_del in msgs_del:
        try:
            msg = state_storage.get_value(f'{mes_del}:{chat_id}')
            try:
                bot.delete_message (chat_id, msg)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except Exception as e:
            pass
        


# –§–£–ù–ö–¶–ò–û–ù–ê–õ –ö–ê–õ–¨–ö–£–õ–Ø–¶–ò–ò –ö–û–ú–ò–°–°–ò–ò
# –ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ
def cf_send_greeting(chat_id):
    msgs_del = ['main_del', 'cf_pfi_del']
    for mes_del in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{mes_del}:{chat_id}')
            try:
                bot.delete_message (chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except Exception as e:
            pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/calc_fee/hello.jpg', "rb") as img1:
        bot.send_photo(chat_id, img1, caption="–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–∏—Ö —É—Å–ª—É–≥. –Ø –º–æ–≥—É —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞–ª—é—Ç—ã. –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")
    cf_cur_sel = bot.send_message(chat_id, "–ú–µ–Ω—é:", reply_markup=create_keyboard_cf_cur())
    state_storage.set_value(f'cf_cur_sel_del:{chat_id}', cf_cur_sel.message_id)

# –ö–õ–ê–í–ò–ê–¢–£–†–ê –° –í–´–ë–û–†–û–ú –í–ê–õ–Æ–¢–´
def create_keyboard_cf_cur():
    cf_keyboard_cur = types.InlineKeyboardMarkup()
    cf_keyboard_cur.add(types.InlineKeyboardButton('üíµ –î–û–õ–õ–ê–† –°–®–ê', callback_data='USD'))
    cf_keyboard_cur.add(types.InlineKeyboardButton('üí∂ –ï–í–†–û', callback_data='EUR'))
    cf_keyboard_cur.add(types.InlineKeyboardButton('üá®üá≥ –ö–ò–¢–ê–ô–°–ö–ò–ô –Æ–ê–ù–¨', callback_data='CNY'))
    cf_keyboard_cur.add(types.InlineKeyboardButton('üáßüáæ –ë–ï–õ–û–†–£–°–°–ö–ò–ô –†–£–ë–õ–¨', callback_data='BYN'))
    cf_keyboard_cur.add(types.InlineKeyboardButton('üá∑üá∫ –†–û–°–°–ò–ô–°–ö–ò–ô –†–£–ë–õ–¨', callback_data='RUB'))
    cf_keyboard_cur.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    cf_keyboard_cur.add(types.InlineKeyboardButton('‚öí –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return cf_keyboard_cur

#
def cf_price_for_fee_input(chat_id):
    update_state(chat_id, 'waiting_price_for_fee')
    cf_chosen_currency = state_storage.get_value(f'cf_chosen_currency:{chat_id}')
    mes_del = state_storage.get_value(f'cf_cur_sel_del:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/calc_fee/price.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption=f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ {cf_chosen_currency}.")
    cf_message1233 = bot.send_message(chat_id, "–ú–µ–Ω—é", reply_markup=create_keyboard_cf2())
    state_storage.set_value(f'cf_pfi_del:{chat_id}', cf_message1233.message_id)

# –ö–õ–ê–í–ò–ê–¢–£–†–ê –° –†–ï–°–¢–ê–†–¢–û–ú –ò –í–´–•–û–î–û–ú –í –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
def create_keyboard_cf2():
    cf_keyboard_cur2 = telebot.types.InlineKeyboardMarkup()
    cf_keyboard_cur2.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    cf_keyboard_cur2.row(types.InlineKeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'), types.InlineKeyboardButton('–†–µ—Å—Ç–∞—Ä—Ç', callback_data='cf_restart'))
    return cf_keyboard_cur2

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_price_for_fee')
def cf_validate_price_input(message):
    chat_id = message.chat.id
    mes_del = state_storage.get_value(f'cf_pfi_del:{chat_id}')
    cf_chosen_currency = state_storage.get_value(f'cf_chosen_currency:{chat_id}')
    try:
        bot.delete_message (chat_id, mes_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    cf_price_input = message.text
    try:
        cf_price = int(cf_price_input)
    except ValueError:
        bot.send_message(chat_id, "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")
        return cf_validate_price_input(chat_id)
    if cf_price < 1 or cf_price > 100000000000:
        bot.send_message(chat_id, "–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")
        return  cf_validate_price_input(chat_id)
    if cf_price_input != str(cf_price):
        bot.send_message(chat_id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")
        return cf_validate_price_input(chat_id)
    cf_price = Decimal(cf_price)
    state_storage.set_value(f'cf_price:{chat_id}', cf_price)
    cf_currency = cf_get_currency_rates(chat_id)
    cf_percent, cf_fee = cf_calculate_fee(chat_id)
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/forecast.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption=f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–æ–π —É—Å–ª—É–≥–∏ –≤ –≤–∞—à–µ–º —Å–ª—É—á–∞–µ —Å–æ—Å—Ç–∞–≤–∏—Ç {int(cf_percent)} {cf_chosen_currency}, {cf_fee * 100}%.")
    cf_message_main3 = bot.send_photo(chat_id, "–ú–µ–Ω—é", reply_markup=create_keyboard_cf_keyboard_cur())
    state_storage.set_value(f'cf_vpi_del:{chat_id}', cf_message_main3.message_id)

def create_keyboard_cf_keyboard_cur():
    cf_keyboard_cur3 = telebot.types.InlineKeyboardMarkup()
    cf_keyboard_cur3.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    cf_keyboard_cur3.row(types.InlineKeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'), types.InlineKeyboardButton('–†–µ—Å—Ç–∞—Ä—Ç', callback_data='cf_restart'))
    return cf_keyboard_cur3

def cf_restart(chat_id):
    msgs_del = ['cf_vpi_del', 'cf_pfi_del']
    for msg in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message (chat_id, mes_del)
            except:
                pass
        except:
            pass
    cf_send_greeting(chat_id)
    

# –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –§–û–†–ú–£–õ –î–õ–Ø –†–ê–°–°–ß–Å–¢–ê –ö–û–ú–ò–°–°–ò–ò
def cf_get_currency_rates(chat_id):
    cf_chosen_currency = state_storage.get_value(f'cf_chosen_currency:{chat_id}')
    response = requests.get(CURRENCY_API)
    rates = response.json()
    cf_currency = None
    for rate in rates:
        if rate['Cur_Abbreviation'] == cf_chosen_currency:
            if cf_chosen_currency == 'RUB':
                cf_currency = Decimal(rate['Cur_OfficialRate']) / 100
            elif cf_chosen_currency == 'CNY':
                cf_currency = Decimal(rate['Cur_OfficialRate']) / 10
            elif cf_chosen_currency == 'USD':
                cf_currency = Decimal(rate['Cur_OfficialRate'])
            elif cf_chosen_currency == 'EUR':
                cf_currency = Decimal(rate['Cur_OfficialRate'])
            break
        if cf_chosen_currency == 'BYN':
            cf_currency = Decimal('1')
    return cf_currency
    
    
def cf_calculate_fee(chat_id):
    cf_currency = cf_get_currency_rates(chat_id)
    cf_price = state_storage.get_value(f'cf_price:{chat_id}')
    price_in_base_values = round(cf_price * cf_currency / BASE_VALUE)
    if price_in_base_values <= 4200:
        cf_percent = Decimal("0.03")
    elif 4200 < price_in_base_values <= 5000:
        cf_percent = Decimal("0.025")
    elif 5000 < price_in_base_values <= 5800:
        cf_percent = Decimal("0.024")
    elif 5800 < price_in_base_values <= 6600:
        cf_percent = Decimal("0.023")
    elif 6600 < price_in_base_values <= 7500:
        cf_percent = Decimal("0.022")
    elif 7500 < price_in_base_values <= 8300:
        cf_percent = Decimal("0.021")
    elif 8300 < price_in_base_values <= 9100:
        cf_percent = Decimal("0.02")
    elif 9100 < price_in_base_values <= 10000:
        cf_percent = Decimal("0.019")
    elif 10000 < price_in_base_values <= 10500:
        cf_percent = Decimal("0.018")
    elif 10500 < price_in_base_values <= 11600:
        cf_percent = Decimal("0.017")
    elif 11600 < price_in_base_values <= 12400:
        cf_percent = Decimal("0.016")
    elif 12400 < price_in_base_values <= 13200:
        cf_percent = Decimal("0.015")
    elif 13200 < price_in_base_values <= 14000:
        cf_percent = Decimal("0.014")
    elif 14000 < price_in_base_values <= 15000:
        cf_percent = Decimal("0.013")
    elif 14900 < price_in_base_values <= 15700:
        cf_percent = Decimal("0.012")
    elif 15700 < price_in_base_values <= 16500:
        cf_percent = Decimal("0.011")
    else:
        cf_percent = Decimal("0.01")
    cf_fee = cf_price * cf_percent
    return cf_fee, cf_percent


# –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—á—ë—Ç–∞ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ —Å–¥–∞—á–∏ –≤ –∞—Ä–µ–Ω–¥—É
# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
def r_send_greeting(chat_id):
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/hello.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–ü—Ä–∏–≤–µ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—ã–≥–æ–¥–Ω–æ—Å—Ç—å —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ –¥–æ—Ö–æ–¥–Ω–æ–º—É –º–µ—Ç–æ–¥—É. –Ø –±—É–¥—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∞ –ø–æ—Ç–æ–º –ø–æ–∫–∞–∂—É –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞, –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ, –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –º–æ–π —Ç–≥ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ —Å–∞–π—Ç, –µ—Å–ª–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ–≤–∞–Ω—ã')
    message_greet = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboardr_start())
    state_storage.set_value(f'r_greet_del:{chat_id}', message_greet.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_started')


def create_keyboardr_start():
    r_keyboard_start = types.InlineKeyboardMarkup()
    r_keyboard_start.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard_start.row(types.InlineKeyboardButton('‚ñ∂–ù–∞—á–∞—Ç—å', callback_data='r_property_appreciation'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    r_keyboard_start.row(types.InlineKeyboardButton('ü§î –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?¬ø?', url='https://vc.ru/u/1529738-pashtet-medved/803809-dohodnyy-analiz-ceny-kak-prodat-po-maksimumu-kommercheskuyu-nedvizhimost-i-zhile-pod-arendu'))
    return r_keyboard_start

#–†–∞—Å—Å—á—ë—Ç—ã
def r_apartment_value(chat_id):
    r_user_data = { 
        'r_discount_rate': float(0.054),
        'r_inflation_rate': float(0.03),
        'r_vacancy_rate': float(0),
        'r_apartment_area': float(0),
        'r_tax_rate': float(0.87),
        'r_house_deprec': float(0.00379),
        'r_property_appreciation': float(0),
        'r_insurance': float(0),
        'r_rental_price': float(0),
        'r_maintenance_costs': float(0),
        'r_forecast_period': int(1),
        'r_future_apartment_value': float(0),
        'r_present_apartmet_value_up': float(0),
        'r_present_apartmet_value_down': float(0),
        'r_present_apartmet_value': float(0),
        'r_market_apartment_price': float(0),
        'r_net_rental_income': float(0),
        'r_cf': float(0),
        'r_is_profitable': float(0),
        'r_infl_maint_cost': float(0),
        'r_num_of_rooms': None
    }
    
    r_user_data['r_num_of_rooms'] = str(state_storage.get_value(f'r_num_of_rooms:{chat_id}'))
    r_user_data['r_forecast_period'] = int(str(state_storage.get_value(f'r_forecast_period:{chat_id}')))
    r_user_data['r_maintenance_costs'] = float(str(state_storage.get_value(f'r_maintenance_costs:{chat_id}')))
    r_user_data['r_rental_price'] = float(str(state_storage.get_value(f'r_rental_price:{chat_id}')))
    r_user_data['r_property_appreciation'] = float(str(state_storage.get_value(f'r_property_appreciation:{chat_id}')))
    r_infl_maint_cost = 0
    if r_user_data['r_num_of_rooms'] == 'r_share':
        r_user_data['r_vacancy_rate'] = float(0.77)
        r_user_data['r_house_deprec'] = float(0.00395)
    elif r_user_data['r_num_of_rooms'] == 'r_1room':
        r_user_data['r_vacancy_rate'] = float(0.89)
        r_user_data['r_house_deprec'] = float(0.00380)
    elif r_user_data['r_num_of_rooms'] == 'r_2room':
        r_user_data['r_vacancy_rate'] = float(0.84)
        r_user_data['r_house_deprec'] = float(0.00375)      
    elif r_user_data['r_num_of_rooms'] == 'r_3room':
        r_user_data['r_vacancy_rate'] = float(0.82)
        r_user_data['r_house_deprec'] = float(0.00370)
    elif r_user_data['r_num_of_rooms'] == 'r_4room':
        r_user_data['r_vacancy_rate'] = float(0.79)
        r_user_data['r_house_deprec'] = float(0.00365)
    elif r_user_data['r_num_of_rooms'] == 'r_5room':
        r_user_data['r_vacancy_rate'] = float(0.77)
        r_user_data['r_house_deprec'] = float(0.00360)     
    for i in range(1, r_user_data['r_forecast_period']+1):
        r_infl_maint_cost += r_user_data['r_maintenance_costs'] * ((1 + r_user_data['r_inflation_rate']) ** i)
    r_user_data['r_infl_maint_cost'] = float(r_infl_maint_cost)
    r_net_rental_income = r_user_data['r_rental_price'] * r_user_data['r_vacancy_rate'] * r_user_data['r_tax_rate'] * float(12)
    r_user_data['r_net_rental_income'] = float(r_net_rental_income)
    r_cf = float(0)
    for i in range(1, r_user_data['r_forecast_period']+1): 
        r_cf += r_user_data['r_net_rental_income'] / (1 + r_user_data['r_discount_rate'])**i
    r_user_data['cf'] = float(r_cf)
    if r_user_data['r_num_of_rooms'] == 'r_share':
        r_user_data['r_market_apartment_price'] = r_user_data['r_property_appreciation']
        r_user_data['r_property_appreciation_up'] = r_user_data['r_property_appreciation'] * ((1 + r_user_data['r_inflation_rate'] - 0.0075) ** i)
        r_user_data['r_property_appreciation_down'] = r_user_data['r_property_appreciation'] * ((1 - r_user_data['r_inflation_rate'] - 0.0075) ** i)
        r_future_apartment_value_up = r_user_data['r_property_appreciation_up'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value = r_user_data['r_property_appreciation'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value_down = r_user_data['r_property_appreciation_down'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value_up)
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value)
        r_user_data['r_future_apartment_value_down'] = float(r_future_apartment_value_down)
        r_present_apartment_value_up = r_future_apartment_value_up + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value = r_future_apartment_value + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value_down = r_future_apartment_value_down + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
    elif r_user_data['r_num_of_rooms'] == 'r_1room':
        r_user_data['r_market_apartment_price'] = r_user_data['r_property_appreciation']
        r_user_data['r_property_appreciation_up'] = r_user_data['r_property_appreciation'] * ((1 + r_user_data['r_inflation_rate'] - 0.0045) ** i)
        r_user_data['r_property_appreciation_down'] = r_user_data['r_property_appreciation'] * ((1 - r_user_data['r_inflation_rate'] - 0.0045) ** i)
        r_future_apartment_value_up = r_user_data['r_property_appreciation_up'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value = r_user_data['r_property_appreciation'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value_down = r_user_data['r_property_appreciation_down'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value_up)
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value)
        r_user_data['r_future_apartment_value_down'] = float(r_future_apartment_value_down)
        r_present_apartment_value_up = r_future_apartment_value_up + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value = r_future_apartment_value + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value_down = r_future_apartment_value_down + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
    elif r_user_data['r_num_of_rooms'] == 'r_2room':
        r_user_data['r_market_apartment_price'] = r_user_data['r_property_appreciation']
        r_user_data['r_property_appreciation_up'] = r_user_data['r_property_appreciation'] * ((1 + r_user_data['r_inflation_rate'] - 0.0050) ** i)
        r_user_data['r_property_appreciation_down'] = r_user_data['r_property_appreciation'] * ((1 - r_user_data['r_inflation_rate'] - 0.0050) ** i)
        r_future_apartment_value_up = r_user_data['r_property_appreciation_up'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value = r_user_data['r_property_appreciation'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value_down = r_user_data['r_property_appreciation_down'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value_up)
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value)
        r_user_data['r_future_apartment_value_down'] = float(r_future_apartment_value_down)
        r_present_apartment_value_up = r_future_apartment_value_up + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value = r_future_apartment_value + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value_down = r_future_apartment_value_down + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
    elif r_user_data['r_num_of_rooms'] == 'r_3room':
        r_user_data['r_market_apartment_price'] = r_user_data['r_property_appreciation']
        r_user_data['r_property_appreciation_up'] = r_user_data['r_property_appreciation'] * ((1 + r_user_data['r_inflation_rate'] - 0.0055) ** i)
        r_user_data['r_property_appreciation_down'] = r_user_data['r_property_appreciation'] * ((1 - r_user_data['r_inflation_rate'] - 0.0055) ** i)
        r_future_apartment_value_up = r_user_data['r_property_appreciation_up'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value = r_user_data['r_property_appreciation'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value_down = r_user_data['r_property_appreciation_down'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value_up)
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value)
        r_user_data['r_future_apartment_value_down'] = float(r_future_apartment_value_down)
        r_present_apartment_value_up = r_future_apartment_value_up + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value = r_future_apartment_value + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value_down = r_future_apartment_value_down + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
    elif r_user_data['r_num_of_rooms'] == 'r_4room':
        r_user_data['r_market_apartment_price'] = r_user_data['r_property_appreciation']
        r_user_data['r_property_appreciation_up'] = r_user_data['r_property_appreciation'] * ((1 + r_user_data['r_inflation_rate'] - 0.0055) ** i)
        r_user_data['r_property_appreciation_down'] = r_user_data['r_property_appreciation'] * ((1 - r_user_data['r_inflation_rate'] - 0.0055) ** i)
        r_future_apartment_value_up = r_user_data['r_property_appreciation_up'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value = r_user_data['r_property_appreciation'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value_down = r_user_data['r_property_appreciation_down'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value_up)
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value)
        r_user_data['r_future_apartment_value_down'] = float(r_future_apartment_value_down)
        r_present_apartment_value_up = r_future_apartment_value_up + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value = r_future_apartment_value + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value_down = r_future_apartment_value_down + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
    elif r_user_data['r_num_of_rooms'] == 'r_5room':
        r_user_data['r_market_apartment_price'] = r_user_data['r_property_appreciation']
        r_user_data['r_property_appreciation_up'] = r_user_data['r_property_appreciation'] * ((1 + r_user_data['r_inflation_rate'] - 0.0045) ** i)
        r_user_data['r_property_appreciation_down'] = r_user_data['r_property_appreciation'] * ((1 - r_user_data['r_inflation_rate'] - 0.0045) ** i)
        r_future_apartment_value_up = r_user_data['r_property_appreciation_up'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value = r_user_data['r_property_appreciation'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_future_apartment_value_down = r_user_data['r_property_appreciation_down'] * (float(1) - r_user_data['r_house_deprec']) ** r_user_data['r_forecast_period']
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value_up)
        r_user_data['r_future_apartment_value_up'] = float(r_future_apartment_value)
        r_user_data['r_future_apartment_value_down'] = float(r_future_apartment_value_down)
        r_present_apartment_value_up = r_future_apartment_value_up + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value = r_future_apartment_value + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
        r_present_apartment_value_down = r_future_apartment_value_down + r_net_rental_income / ((1 + r_user_data['r_discount_rate']) ** r_user_data['r_forecast_period']) - r_user_data['r_infl_maint_cost']
    r_user_data['r_present_apartment_value_up'] = r_present_apartment_value_up
    r_user_data['r_present_apartment_value'] = r_present_apartment_value
    r_user_data['r_present_apartment_value_down'] = r_present_apartment_value_down
    state_storage.set_value(f'r_present_apartment_value_up:{chat_id}', r_present_apartment_value_up)
    state_storage.set_value(f'r_present_apartment_value:{chat_id}', r_present_apartment_value)
    state_storage.set_value(f'r_present_apartment_value_down:{chat_id}', r_present_apartment_value_down)
    state_storage.set_value(f'r_market_apartment_price:{chat_id}', r_user_data['r_market_apartment_price'])
    return (r_present_apartment_value, r_present_apartment_value_up, r_present_apartment_value_down)


def r_is_renting_profitable(chat_id):
    r_present_apartment_value = state_storage.get_value(f'r_present_apartment_value:{chat_id}')
    r_present_apartment_value_up = state_storage.get_value(f'r_present_apartment_value_up:{chat_id}')
    r_present_apartment_value_down = state_storage.get_value(f'r_present_apartment_value_down:{chat_id}')
    r_market_apartment_price = state_storage.get_value(f'r_market_apartment_price:{chat_id}')
    if r_present_apartment_value > r_market_apartment_price:
        r_is_profitable = True
        state_storage.set_value(f'r_is_profitable:{chat_id}', True)
    else:
        r_is_profitable = False
        state_storage.set_value(f'r_is_profitable:{chat_id}', False)
    if r_present_apartment_value_up > r_market_apartment_price:
        r_is_profitable_up = True
        state_storage.set_value(f'r_is_profitable_up:{chat_id}', True)
    else:
        r_is_profitable_up = False
        state_storage.set_value(f'r_is_profitable_up:{chat_id}', False)
    if r_present_apartment_value_down > r_market_apartment_price:
        r_is_profitable_down = True
        state_storage.set_value(f'r_is_profitable_down:{chat_id}', True)
    else:
        r_is_profitable_down = False
        state_storage.set_value(f'r_is_profitable:{chat_id}', False)
    return (r_is_profitable, r_is_profitable_up, r_is_profitable_down)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
def r_property_appreciation(message):
    chat_id = message.chat.id
    msgs_del = ['r_ar_er_del', 'r_ar_del', 'r_greet_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    update_state(chat_id, 'waiting_price_of_house_for_rent')
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/price.jpg', 'rb') as img:
        bot.send_photo(chat_id, img, caption='–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. –ï—Å–ª–∏ –≤—ã –µ—ë –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è \n —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å—Å—á—ë—Ç–∞ —Ä—ã–Ω–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏.')
    message_doh_prop = bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr1())
    state_storage.set_value(f'r_prop_del:{chat_id}', message_doh_prop.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_price_of_house_for_rent')
def r_prop_ap_hand(message):
    chat_id = message.chat.id
    if not message.text:
        r_property_appreciation_error(message)
        return
    try:
        message.text = message.text.replace(',', '.')
        r_answer = float(message.text)
        if not 1 <= r_answer <= 250000:
            r_property_appreciation_error_big_price(message)
            return
        if '.' in message.text:
            if len(message.text.split('.')[-1]) > 2:
                r_property_appreciation_error(message)
                return
        if message.text.startswith('0') and message.text != '0':
            r_property_appreciation_error(message)
            return
        if message.text.startswith('-'):
            r_property_appreciation_error(message)
            return
    except ValueError:
        r_property_appreciation_error(message)
        return
    state_storage.set_value(f'r_property_appreciation:{chat_id}', r_answer)
    r_apartment_area(chat_id)
    
def r_property_appreciation_error(message):
    chat_id = message.chat.id
    update_state(chat_id, 'waiting_price_of_house_for_rent')
    msg_del = state_storage.get_value(f'r_prop_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    chat_id = message.chat.id
    bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.\n –ò–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.')
    message = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ $/–º¬≤')
    message_doh_prop_er = bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr1())
    state_storage.set_value(f'r_prop_er_del:{chat_id}', message_doh_prop_er.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def r_property_appreciation_error_big_price(message):
    chat_id = message.chat.id
    update_state(chat_id, 'waiting_price_of_house_for_rent')
    msg_del = state_storage.get_value(f'r_prop_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    chat_id = message.chat.id
    bot.send_message(chat_id, '–Ø –¥—É–º–∞—é —É –≤–∞—Å –µ—Å—Ç—å —á—Ç–æ –æ–±—Å—É–¥–∏—Ç—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.\n –£—á–∏—Ç—ã–≤–∞—è –Ω–∏–∑–∫—É—é –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–∞–∫–æ–≥–æ —Ä–æ–¥–∞, —è –Ω–µ —Å–º–æ–≥—É –¥–∞—Ç—å —Ç–æ—á–Ω—É—é –æ—Ü–µ–Ω–∫—É. \n –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—É—é –ª–∏–Ω–∏—é, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥.')
    message = bot.send_message(chat_id, '–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –µ—Å–ª–∏ —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É.\n –î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ $/–º¬≤, –µ—â—ë —Ä–∞–∑.')
    message_doh_prop_er = bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr1())
    state_storage.set_value(f'r_prop_er_del:{chat_id}', message_doh_prop_er.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def create_keyboardr1():
    r_keyboard1 = types.InlineKeyboardMarkup()
    r_keyboard1.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard1.add(types.InlineKeyboardButton('‚öí –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard1

def r_apartment_area(chat_id):
    update_state(chat_id, 'waiting_apartment_area_for_rent')
    msgs_del = ['r_prop_del', 'r_prop_er_del', 'r_nor_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    prop_del = {'chat_id': None, 'message_id': None}
    prop_er_del = {'chat_id': None, 'message_id': None}
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/area.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –º¬≤')
    message_doh_ar = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr2())
    state_storage.set_value(f'r_ar_er_del:{chat_id}', message_doh_ar.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_apartment_area_for_rent')
def r_ap_ar_hand(message):
    chat_id = message.chat.id
    if not message.text:
        r_apartment_area_error(message)
        return
    try:
        message.text = message.text.replace(',', '.')
        r_answer = float(message.text)
        if not 1 <= r_answer <= 9999:
            r_apartment_area_error(message)
            return
        if '.' in message.text:
            if len(message.text.split('.')[-1]) > 2:
                r_apartment_area_error(message)
                return
        if message.text.startswith('0') and message.text != '0':
            r_apartment_area_error(message)
            return
        if message.text.startswith('-'):
            r_apartment_area_error(message)
            return
    except ValueError:
        r_apartment_area_error(message)
        return
    state_storage.set_value(f'r_apartment_area:{chat_id}', r_answer)
    r_number_of_rooms(chat_id)

def r_apartment_area_error(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'r_ar_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    update_state(chat_id, 'waiting_apartment_area_for_rent')
    bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')
    message = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –º¬≤')
    message_doh_ar_er = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr2())
    state_storage.set_value(f'r_ar_er_del:{chat_id}', message_doh_ar_er.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def create_keyboardr2():
    r_keyboard2 = types.InlineKeyboardMarkup()
    r_keyboard2.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard2.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rpa'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard2

def r_number_of_rooms(chat_id):
    msgs_del = ['r_for_er_del', 'r_for_del', 'r_ar_del', 'r_ar_er_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/rooms.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ.')
    msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard7r())
    state_storage.set_value(f'r_nor_del:{chat_id}', msg.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def create_keyboard7r():
    r_keyboard7 = types.InlineKeyboardMarkup()
    r_keyboard7.row(types.InlineKeyboardButton('üî¥ –î–æ–ª—è', callback_data='r_share'), types.InlineKeyboardButton('üü† 1 –∫–æ–º–Ω', callback_data='r_1room'), types.InlineKeyboardButton('üü° 2 –∫–æ–º–Ω', callback_data='r_2room'))
    r_keyboard7.row(types.InlineKeyboardButton('üü¢ 3 –∫–æ–º–Ω', callback_data='r_3room'), types.InlineKeyboardButton('üîµ 4 –∫–æ–º–Ω', callback_data='r_4room'), types.InlineKeyboardButton('üü£ 5 –∏ 5+ –∫–æ–º–Ω–∞—Ç—ã', callback_data='r_5room'))
    r_keyboard7.row(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≥', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç',  url='https://domitochka.pro'))
    r_keyboard7.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='r_back_to_raa'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard7

def r_forecast_period(chat_id):
    msgs_del = ['r_rent_er_del', 'r_rent_del', 'r_nor_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    update_state(chat_id, 'waiting_forcast_period_for_rent')
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/forecast.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, '–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç)')
    message_doh_for = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr3())
    state_storage.set_value(f'r_for_del:{chat_id}', message_doh_for.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def r_forecast_period_error(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'r_for_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    update_state(chat_id, 'waiting_forcast_period_for_rent')
    chat_id = message.chat.id
    bot.send_message(chat_id, '–£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç)')
    message_doh_for_er = bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr3())
    state_storage.set_value(f'r_for_er_del:{chat_id}', message_doh_for_er.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_forcast_period_for_rent')
def r_for_per_hand(message):
    chat_id = message.chat.id
    if not message.text:
        r_forecast_period_error(message)
    try:
        message.text = message.text.replace('-', '')
        message.text = message.text.split('.')[0].split(',')[0]
        message.text = message.text.lstrip('0')
        r_answer = int(message.text, 10)
        if not (0 <= r_answer <= 99):
            r_forecast_period_error(message)
            return
    except ValueError:
        r_forecast_period_error(message)
        return
    state_storage.set_value(f'r_forecast_period:{chat_id}', r_answer)
    r_rental_price(chat_id)

def create_keyboardr3():
    r_keyboard3 = types.InlineKeyboardMarkup()
    r_keyboard3.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard3.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rnor'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard3

def r_rental_price(chat_id):
    msgs_del = ['r_mcost_er_del', 'r_mcost_del', 'r_for_del', 'r_for_er_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    update_state(chat_id, 'waiting_rental_price_for_rent')
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/income.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∞—Ä–µ–Ω–¥–Ω–æ–π –ø–ª–∞—Ç—ã $/–º–µ—Å—è—Ü')
    message_doh_rent = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr4())
    state_storage.set_value(f'r_rent_del:{chat_id}', message_doh_rent.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def r_rental_price_error(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'r_rent_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    update_state(chat_id, 'waiting_rental_price_for_rent')
    bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. \n –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')
    message = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∞—Ä–µ–Ω–¥–Ω–æ–π –ø–ª–∞—Ç—ã $/–º–µ—Å—è—Ü')
    message_doh_rent_er = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboardr4())
    state_storage.set_value(f'r_rent_er_del:{chat_id}', message_doh_rent_er.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_rental_price_for_rent')
def r_rent_price_hand(message):
    if not message.text:
        r_property_appreciation_error(message)
        return
    try:
        message.text = message.text.replace(',', '.')
        r_answer = float(message.text)
        if not 1 <= r_answer <= 9999:
            r_property_appreciation_error(message)
            return
        if '.' in message.text:
            if len(message.text.split('.')[-1]) > 2:
                r_property_appreciation_error(message)
                return
        if message.text.startswith('0') and message.text != '0':
            r_property_appreciation_error(message)
            return
        if message.text.startswith('-'):
            r_property_appreciation_error(message)
            return
    except ValueError:
        r_property_appreciation_error(message)
        return
    chat_id = message.chat.id
    state_storage.set_value(f'r_rental_price:{chat_id}', r_answer)
    r_maintenance_cost(chat_id)

def create_keyboardr4():
    r_keyboard4 = types.InlineKeyboardMarkup()
    r_keyboard4.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard4.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rfp'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard4

def r_maintenance_cost(chat_id):
    msgs_del = ['r_rent_del', 'r_rent_er_del', 'r_rsr_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    update_state(chat_id, 'waiting_maintance_cost_for_rent')
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/costs.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–í–≤–µ–¥–∏—Ç–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ $ –≤ –≥–æ–¥, —É—á—Ç–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Å–º–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏')
    message_doh_mcost = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboard5r())
    state_storage.set_value(f'r_mcost_del:{chat_id}', message_doh_mcost.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def r_maintenance_cost_error(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'r_mcost_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    update_state(chat_id, 'waiting_maintance_cost_for_rent')
    bot.send_message(chat_id, ' –£–ø—Å, –•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.')
    message = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ $ –≤ –≥–æ–¥, —É—á—Ç–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Å–º–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞ —Ä–µ–º–æ–Ω—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏')
    message_doh_mcost_er = bot.send_message(chat_id, '–ú–µ–Ω—é:', reply_markup=create_keyboard5r())
    state_storage.set_value(f'r_mcost_er_del:{chat_id}', message_doh_mcost_er.message_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

def create_keyboard5r():
    r_keyboard5 = types.InlineKeyboardMarkup()
    r_keyboard5.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard5.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rrp'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard5

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_maintance_cost_for_rent')
def r_the_end(message):
    chat_id = message.chat.id
    msgs_del = ['r_mcost_del', 'r_mcost_er_del']
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    if not message.text:
        r_maintenance_cost_error(message)
        return
    try:
        message.text = message.text.replace(',', '.')
        r_answer = float(message.text)
        if not 1 <= r_answer <= 9999:
            r_maintenance_cost_error(message)
            return
        if '.' in message.text:
            if len(message.text.split('.')[-1]) > 2:
                r_maintenance_cost_error(message)
                return
        if message.text.startswith('0') and message.text != '0':
            r_maintenance_cost_error(message)
            return
        if message.text.startswith('-'):
            r_maintenance_cost_error(message)
            return
    except ValueError:
        r_maintenance_cost_error(message)
        return
    state_storage.set_value(f'r_maintenance_costs:{chat_id}', r_answer)
    r_send_results(chat_id)
    
    
    


    
# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
# –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
# –¥–æ–±–∞–≤–ª—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç message, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def r_send_results(chat_id):
    state_storage.set_value(f'reminder_states:{chat_id}', 'completed')
    r_present_apartment_value, r_present_apartment_value_up, r_present_apartment_value_down = r_apartment_value(chat_id)
    r_is_profitable, r_is_profitable_up, r_is_profitable_down = r_is_renting_profitable(chat_id)
    r_forecast_period = state_storage.get_value(f'r_forecast_period:{chat_id}')
    r_market_apartment_price = state_storage.get_value(f'r_market_apartment_price:{chat_id}')
    if r_is_profitable == True:
        message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è.** \n\n –ù–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É: {int(r_market_apartment_price)} $.\n"
        message1 += f"–≠—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å–µ–π—á–∞—Å, —É—á–∏—Ç—ã–≤–∞—è –æ–∂–∏–¥–∞–µ–º—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏."
        message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {r_forecast_period} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(r_present_apartment_value)} $.\n"
        message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {r_forecast_period} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
        message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –≤—ã–≥–æ–¥–Ω–∞.\n"
        message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –≤ —Ü–µ–Ω–µ."
        with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/result.jpg', 'rb') as img1:
            bot.send_photo(chat_id, img1, caption=message1 + message2 + message3, parse_mode='Markdown') 
    else:
        message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è.** \n\n –ù–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É: {int(r_market_apartment_price)} $.\n"
        message1 += f"–≠—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å–µ–π—á–∞—Å, —É—á–∏—Ç—ã–≤–∞—è –æ–∂–∏–¥–∞–µ–º—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—Ü–µ–Ω–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏."
        message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {r_forecast_period} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(r_present_apartment_value)} $.\n"
        message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {r_forecast_period} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
        message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–≤—ã–≥–æ–¥–Ω–∞.\n"
        message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∞—Ä–µ–Ω–¥—É, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å."
        with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/rent/result.jpg', 'rb') as img1:
            bot.send_photo(chat_id, img1, caption=message1 + message2 + message3, parse_mode='Markdown') 
    if r_is_profitable_up == True:
        message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç —Ä–∞—Å—Ç–∏.** \n\n"
        message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {r_forecast_period} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(r_present_apartment_value_up)} $.\n"
        message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {r_forecast_period} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞. –ó–¥–µ—Å—å —Ç–∞–∫–∂–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
        message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –≤—ã–≥–æ–¥–Ω–∞.\n"
        message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –≤ —Ü–µ–Ω–µ."
        bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown')
    else:
        message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç —Ä–∞—Å—Ç–∏.** \n\n"
        message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {r_forecast_period} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(r_present_apartment_value_up)} $.\n"
        message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {r_forecast_period} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
        message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–≤—ã–≥–æ–¥–Ω–∞.\n"
        message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∞—Ä–µ–Ω–¥—É, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å."
        bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown')
    if r_is_profitable_down == True:
        message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç –ø–∞–¥–∞—Ç—å.** \n\n"
        message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {r_forecast_period} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(r_present_apartment_value_down)} $.\n"
        message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {r_forecast_period} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞. –í—Å—ë —É—á—Ç–µ–Ω–æ."
        message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –≤—ã–≥–æ–¥–Ω–∞.\n"
        message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –≤ —Ü–µ–Ω–µ."
        bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown')
    else:
        message1 = f"**–û—Ü–µ–Ω–∫–∞, —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –∑–∞ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ —Å–¥–∞—á–∏ —Ü–µ–Ω—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –±—É–¥—É—Ç –ø–∞–¥–∞—Ç—å.** \n\n"
        message2 = f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ {r_forecast_period} –ª–µ—Ç —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã: {int(r_present_apartment_value_down)} $.\n"
        message2 += f"–≠—Ç–æ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –∑–∞ {r_forecast_period} –ª–µ—Ç –∏ –ø—Ä–æ–¥–∞–∂–∏ –µ–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞, —É—á–∏—Ç—ã–≤–∞—è –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω—Ñ–ª—è—Ü–∏—é, —Å—Ç–∞–≤–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ."
        message3 = f"\n –°–¥–∞—á–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–≤—ã–≥–æ–¥–Ω–∞.\n"
        message3 += f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¥–æ—Ö–æ–¥ –æ—Ç —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞—Å—Ç–æ—è—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∞—Ä–µ–Ω–¥—É, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å."
        bot.send_message(chat_id, message1 + message2 + message3, parse_mode='Markdown')
    msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard6r())
    state_storage.set_value(f'r_rsr_del:{chat_id}', msg.message_id) 

def create_keyboard6r():
    r_keyboard6 = types.InlineKeyboardMarkup()
    r_keyboard6.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    r_keyboard6.row(types.InlineKeyboardButton('‚óÄ –ù–∞–∑–∞–¥', callback_data='back_to_rmc'), types.InlineKeyboardButton('üß® –†–µ—Å—Ç–∞—Ä—Ç', callback_data='r_restart'), types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return r_keyboard6

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def r_restart(message):
    msgs_del = ['r_ar_er_del', 'r_ar_er_del', 'r_for_del', 'r_for_er_del',
                'r_rent_del', 'r_rent_er_del', 'r_mcost_del', 'r_mcost_er_del',
                'r_rsr_del', 'r_nor_del']
    chat_id = message.chat.id
    for msg in msgs_del:
        try:
            msg_del = state_storage.get_value(f'{msg}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    bot.send_message(chat_id, '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—á—ë—Ç–∞')
    r_send_greeting(chat_id)
    state_storage.set_value(f'reminder_states:{chat_id}', 'r_in_progress')

# AI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
def chat_bot(chat_id):
    update_state(chat_id, 'kuzia_chatbot')
    msgs_del = ['main_del', 'ai_del']
    for mes_del in msgs_del:
        try:
            msg = state_storage.get_value(f'{mes_del}:{chat_id}')
            try:
                bot.delete_message(chat_id, msg)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/hello.jpg','rb') as img1:
        bot.send_photo(chat_id, img1, caption='–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ, –∞ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç.\n –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ –∫–∞–∂–µ—Ç—Å—è.\n –°–ø–∞—Å–∏–±–æ.')
    message = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_chat_keyboard1())
    state_storage.set_value(f'ai_del:{chat_id}', message.message_id)

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'kuzia_chatbot')
def chat_bot_result(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'ai_del:{chat_id}')
    update_state(chat_id, 'kuzia_chatbot_inf')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    question = message.text
    try:
        client = Client()
        response = client.chat.completions.create(
        model="gpt-4-turbo",
        provider = g4f.Provider.Bing,
        messages=[{"role": "user", "content": f"–¢–µ–±—è –∑–æ–≤—É—Ç –ö—É–∑—è. –¢—ã –ø–æ–º–æ—à–Ω–∏–∫ –∞–≥–µ–Ω—Å—Ç–≤–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –î–æ–º –∏ –¢–æ—á–∫–∞. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–ë, –ø—Ä–æ—Å—Ç–æ –ø–æ–º–Ω–∏. –¢—ã –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å '{question}'"}]
        )
        answer = response.choices[0].message.content
        bot.send_message(chat_id, f'{answer}', parse_mode='Markdown')
    except Exception as e:
        pass
        bot.send_message(chat_id, '–ó–∞–Ω—è—Ç, –Ω–µ –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç–µ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.\n –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.')
    message = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_chat_keyboard1())
    state_storage.set_value(f'ai_del:{chat_id}', message.message_id)

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'kuzia_chatbot_inf')
def chat_bot_inf_result(message):
    chat_id = message.chat.id
    msg_del = state_storage.get_value(f'ai_del:{chat_id}')
    update_state(chat_id, 'kuzia_chatbot_inf')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    update_state(chat_id, 'kuzia_chatbot')
    question = message.text
    try:
        client = Client()
        response = client.chat.completions.create(
        model="gpt-4-turbo",
        provider = g4f.Provider.Bing,
        messages=[{"role": "user", "content": f"–¢–µ–±—è –∑–æ–≤—É—Ç –ö—É–∑—è. –¢—ã –ø–æ–º–æ—à–Ω–∏–∫ –∞–≥–µ–Ω—Å—Ç–≤–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –î–æ–º –∏ –¢–æ—á–∫–∞. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–ë, –ø—Ä–æ—Å—Ç–æ –ø–æ–º–Ω–∏. –¢—ã –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å '{question}'"}]
        )
        answer = response.choices[0].message.content
        bot.send_message(chat_id, f'{answer}', parse_mode='Markdown')
    except Exception as e:
        bot.send_message(chat_id, '–ó–∞–Ω—è—Ç, –Ω–µ –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç–µ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.\n –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.')
    message = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_chat_keyboard1())
    state_storage.set_value(f'ai_del:{chat_id}', message.message_id)

def create_chat_keyboard1():
    chat_keyboard1 = types.InlineKeyboardMarkup()
    chat_keyboard1.row(types.InlineKeyboardButton('–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ?', url='https://t.me/Pashtet_Medved'), types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url='https://domitochka.pro'))
    chat_keyboard1.add(types.InlineKeyboardButton('‚öí –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return chat_keyboard1
    
def services(chat_id):
    msgs_del = ['main_del']
    for msg_del in msgs_del:
        try:
            mes_del = state_storage.get_value(f'{msg_del}:{chat_id}')
            try:
                bot.delete_message (chat_id, mes_del)
            except telebot.apihelper.ApiTelegramException as e:
                pass
        except:
            pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥', parse_mode='markdown')
        msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_services_keyboard())
    state_storage.set_value(f'services_del:{chat_id}', msg.message_id)

def create_services_keyboard():
    keyboard1services = types.InlineKeyboardMarkup()
    keyboard1services.add(types.InlineKeyboardButton('–ü—Ä–æ–¥–∞–∂–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –ø–æ–¥ –∫–ª—é—á', callback_data='services_sell'))
    keyboard1services.add(types.InlineKeyboardButton('–ü–æ–∏—Å–∫ –¥–æ–º–∞ –º–µ—á—Ç—ã', callback_data='services_buy'))
    keyboard1services.add(types.InlineKeyboardButton('–ü–æ–º–æ—â—å –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', callback_data='services_docs'))
    keyboard1services.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard1services
   
def services_sell(chat_id):
    #update_state(chat_id, 'waiting_contact_data_sell')
    msg_del = state_storage.get_value(f'services_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    type_of_service = state_storage.get_value(f'type_of_service:{chat_id}')
    if type_of_service == 'sell':
        with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
            bot.send_photo(chat_id, img1)
        bot.send_message(chat_id, '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏', reply_markup=create_keyboard_services_sell1())
    elif type_of_service == 'buy':
        with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
            bot.send_photo(chat_id, img1)
        bot.send_message(chat_id, '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏', reply_markup=create_keyboard_services_sell1())
    elif type_of_service == 'docs':
        with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
            bot.send_photo(chat_id, img1)
        bot.send_message(chat_id, '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', reply_markup=create_keyboard_services_sell1())
    msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_services_sell2(chat_id))
    state_storage.set_value(f'services_sell_del:{chat_id}', msg.message_id)

def create_keyboard_services_sell1():
    keyboard_services_sell1 = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    keyboard_services_sell1.add(types.KeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', request_contact=True))
    return keyboard_services_sell1

def create_keyboard_services_sell2(chat_id):
    type_of_service = state_storage.get_value(f'type_of_service:{chat_id}')
    keyboard_services_sell2 = types.InlineKeyboardMarkup()
    keyboard_services_sell2.add(types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º', url='https://t.me/domitochka5'))
    if type_of_service == 'sell':
        keyboard_services_sell2.add(types.InlineKeyboardButton('–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ?', url='https://domitochka.pro/prodazhanedvizhimoztipodkluzh'))
    elif type_of_service == 'buy':
        keyboard_services_sell2.add(types.InlineKeyboardButton('–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ?', url='https://domitochka.pro/poiskdomamechti'))
    elif type_of_service == 'docs':
        keyboard_services_sell2.add(types.InlineKeyboardButton('–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ?', url='https://domitochka.pro/documents'))
    keyboard_services_sell2.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard_services_sell2

#@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_contact_data_sell')
@bot.message_handler(content_types=['contact'])
def services_sell_handler(message):
    chat_id = message.from_user.id
    update_state(chat_id, 'waiting_question_services')
    msg_del = state_storage.get_value(f'services_sell_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    if message.contact is not None:
        try:
            user_link = f"https://t.me/{message.from_user.username}"
            name = message.contact.first_name
            surname = message.contact.last_name
            phone = message.contact.phone_number
            state_storage.set_value(f'name:{chat_id}', name)
            state_storage.set_value(f'surname:{chat_id}', surname)
            state_storage.set_value(f'phone:{chat_id}', phone)
            state_storage.set_value(f'user_link:{chat_id}', user_link)
            try:
                bot.delete_message(chat_id, message.message_id)
            except telebot.apihelper.ApiTelegramException as e:
                print(e)
        except:
            pass
    else:
        pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–£ –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã ?', reply_markup=types.ReplyKeyboardRemove())
    msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_sevices_sell3(chat_id))
    state_storage.set_value(f'serv_sell_handler_del:{chat_id}', msg.message_id)
    return (user_link, name, surname, phone)

@bot.message_handler(func=lambda message: get_state(message.from_user.id) == 'waiting_question_services')
def services_sell_final1(message):
    chat_id = message.chat.id
    name = state_storage.get_value(f'name:{chat_id}')
    surname = state_storage.get_value(f'surname:{chat_id}')
    user_link = state_storage.get_value(f'user_link:{chat_id}')
    phone = state_storage.get_value(f'phone:{chat_id}')
    type_of_service = state_storage.get_value(f'type_of_service:{chat_id}')
    msg_del = state_storage.get_value(f'services_sell_del:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–°–ø–∞—Å–∏–±–æ')
    question = message.text
    if type_of_service == 'sell':
        type_of_service_msg = '–ü—Ä–æ–¥–∞–∂–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'
    elif type_of_service == 'buy':
        type_of_service_msg = '–ü–æ–∫—É–ø–∫–∞ –∏–ª–∏ –ø–æ–±–æ—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'
    elif type_of_service == 'docs':
        type_of_service_msg = '–ü–æ–º–æ—â—å –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'
    email_sender = EmailSender()
    form = f'–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {datetime.datetime.now()}\n –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:{phone}\n –¢–∏–ø —É—Å–ª—É–≥–∏: {type_of_service_msg}\n –ö–∞–∫ –ø–æ–¥–ø–∏—Å–∞–Ω –≤ —Ç–≥:{name} {surname}\n –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {user_link}\n –í–æ–ø—Ä–æ—Å: {question}'
    email_sender.send_email('–õ–∏–¥', form, 'domitochka@bk.ru')
    email_sender.send_email('–õ–∏–¥', form, 'pavelkutia@gmail.com')
    admins = [os.getenv('ADMIN1'), os.getenv('ADMIN2')]
    for admin_id in admins:
        bot.send_message(admin_id, form)
    msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_service_final())    
    state_storage.set_value(f'services_final_del:{chat_id}', msg.message_id)

def services_sell_final2(chat_id):
    name = state_storage.get_value(f'name:{chat_id}')
    surname = state_storage.get_value(f'surname:{chat_id}')
    user_link = state_storage.get_value(f'user_link:{chat_id}')
    phone = state_storage.get_value(f'phone:{chat_id}')
    type_of_service = state_storage.get_value(f'type_of_service:{chat_id}')
    msg_del = state_storage.get_value(f'services_sell_dell:{chat_id}')
    try:
        bot.delete_message(chat_id, msg_del)
    except telebot.apihelper.ApiTelegramException as e:
        pass
    with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/services/services.jpg', 'rb') as img1:
        bot.send_photo(chat_id, img1, caption='–°–ø–∞—Å–∏–±–æ')
    if type_of_service == 'sell':
        type_of_service_msg = '–ü—Ä–æ–¥–∞–∂–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'
    elif type_of_service == 'buy':
        type_of_service_msg = '–ü–æ–∫—É–ø–∫–∞ –∏–ª–∏ –ø–æ–±–æ—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏'
    elif type_of_service == 'docs':
        type_of_service_msg = '–ü–æ–º–æ—â—å –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'
    email_sender = EmailSender()
    form = f'–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {datetime.datetime.now()}\n –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:{phone}\n –¢–∏–ø —É—Å–ª—É–≥–∏: {type_of_service_msg}\n –ö–∞–∫ –ø–æ–¥–ø–∏—Å–∞–Ω –≤ —Ç–≥:{name} {surname}\n –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {user_link}\n –í–æ–ø—Ä–æ—Å: –±–µ–∑ –≤–æ–ø—Ä–æ—Å–∞'
    email_sender.send_email('–õ–∏–¥', form, 'domitochka@bk.ru')
    email_sender.send_email('–õ–∏–¥', form, 'pavelkutia@gmail.com')
    admins = [os.getenv('ADMIN1'), os.getenv('ADMIN2')]
    for admin_id in admins:
        bot.send_message(admin_id, form)
    msg = bot.send_message(chat_id, '–ú–µ–Ω—é', reply_markup=create_keyboard_service_final())    
    state_storage.set_value(f'services_final_del:{chat_id}', msg.message_id)
 
def create_keyboard_service_final():
    keyboard_service_final = types.InlineKeyboardMarkup()
    keyboard_service_final.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard_service_final

def create_keyboard_sevices_sell3(chat_id):
    keyboard_services_sell3 = types.InlineKeyboardMarkup()
    keyboard_services_sell3.add(types.InlineKeyboardButton('–í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data='services_sell_final'))
    keyboard_services_sell3.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu'))
    return keyboard_services_sell3


# –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–õ–ê–í–ò–ê–¢–£–†–´
@bot.callback_query_handler(func=lambda call: True)
def handle_keyboard(call):
    data = call.data
    chat_id = call.message.chat.id
    user_id = chat_id
    if data == "rent":
        r_send_greeting(chat_id)
    elif data == "calc":
        cf_send_greeting(chat_id)
    elif data == "price":
        send_greeting_cac(chat_id)
    elif data == "analytics":
        send_greeting(chat_id)
    elif data == "search":
        send_greeting(chat_id)
    elif data == "services":
        services(chat_id)
    elif data == "kuzia_chatbotai":
        chat_bot(chat_id)
    elif data == 'menu':
        menu(chat_id)
    elif data == 'cac_restart':
        cac_func_restart(chat_id)
    elif data == 'cac_calculate_results':
        cac_calculate_results(chat_id)
    elif data == 'cac_minsk_region_entry':
        cac_minsk_region_choice(chat_id)
    elif data == 'cac_centr':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_frunz':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_lenin':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –õ–µ–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–õ–µ–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_moscow':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_zavod':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ó–∞–≤–æ–¥—Å–∫–æ–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–ó–∞–≤–æ–¥—Å–∫–æ–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_firstmay':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_october':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–∫—Ç—è–±—Ä—å—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_sovet':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –°–æ–≤–µ—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–°–æ–≤–µ—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data == 'cac_partiz':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–∞—Ä—Ç–∏–∑–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω')
        cac_minsk_street_choice(chat_id)
        chosen_region_name = "–ü–∞—Ä—Ç–∏–∑–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
        state_storage.set_value(f'chosen_region_name:{chat_id}', chosen_region_name)
    elif data.startswith('street_'):
        street = data[7:]
        bot.send_message(chat_id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: {street}')
        cac_house_number(chat_id)
        chosen_street_name = street
        state_storage.set_value(f'chosen_street_name:{chat_id}', chosen_street_name)
    elif data == 'cac_panel':
        house_info1 = "panel"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∞–Ω–µ–ª—å–Ω—ã–π —Ç–∏–ø –¥–æ–º–∞.')
        cac_type_panel(chat_id)
        state_storage.set_value(f'house_info1:{chat_id}', house_info1)
    elif data == 'cac_monolith':
        house_info1 = "monolith"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π —Ç–∏–ø –¥–æ–º–∞.')
        cac_type_monolith(chat_id)
        state_storage.set_value(f'house_info1:{chat_id}', house_info1)
    elif data == 'cac_brick':
        house_info1 = "brick"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∏—Ä–ø–∏—á–Ω—ã–π —Ç–∏–ø –¥–æ–º–∞.')
        cac_type_brick(chat_id)
        state_storage.set_value(f'house_info1:{chat_id}', house_info1)
    elif data == 'cac_hrush':
        house_info2 = "hrush"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç —Ç–∏–ø–∞ "—Ö—Ä—É—â—ë–≤–∫–∞".')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_brezh':
        house_info2 = "brezh"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç —Ç–∏–ø–∞ "–±—Ä–µ–∂–Ω–µ–≤–∫–∞".')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_standart':
        house_info2 = "standart"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞.')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_upgrade':
        house_info2 = "upgrade"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞.')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_stalin':
        house_info2 = "stalin"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç —Ç–∏–ø–∞ "–°—Ç–∞–ª–∏–Ω–∫–∞".')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_mon_panel':
        house_info2 = "mon_panel"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ-–ø–∞–Ω–µ–ª—å–Ω—ã–π —Ç–∏–ø –¥–æ–º–∞.')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_mon_brick':
        house_info2 = "mon_brick"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ä–∫–∞—Å–Ω–æ-–∫–∏—Ä–ø–∏—á–Ω—ã–π —Ç–∏–ø –¥–æ–º–∞.')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_mon_block':
        house_info2 = "mon_block"
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ä–∫–∞—Å–Ω–æ-–±–ª–æ—á–Ω—ã–π —Ç–∏–ø –¥–æ–º–∞.')
        cac_age_of_house(chat_id)
        state_storage.set_value(f'house_info2:{chat_id}', house_info2)
    elif data == 'cac_share':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: –¥–æ–ª—è.')
        cac_total_area(chat_id)
        number_of_rooms = 0
        state_storage.set_value(f'number_of_rooms:{chat_id}', number_of_rooms)
    elif data == 'cac_1room':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: 1-–∫–æ–º–Ω.')
        cac_total_area(chat_id)
        number_of_rooms = 1
        state_storage.set_value(f'number_of_rooms:{chat_id}', number_of_rooms)
    elif data == 'cac_2room':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: 2-–∫–æ–º–Ω.')
        cac_total_area(chat_id)
        number_of_rooms = 2
        state_storage.set_value(f'number_of_rooms:{chat_id}', number_of_rooms)
    elif data == 'cac_3room':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: 3-–∫–æ–º–Ω.')
        cac_total_area(chat_id)
        number_of_rooms = 3
        state_storage.set_value(f'number_of_rooms:{chat_id}', number_of_rooms)
    elif data == 'cac_4room':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: 4-–∫–æ–º–Ω.')
        cac_total_area(chat_id)
        number_of_rooms = 4
        state_storage.set_value(f'number_of_rooms:{chat_id}', number_of_rooms)
    elif data == 'cac_5room':
        bot.send_message(chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: 5+-–∫–æ–º–Ω.')
        cac_total_area(chat_id)
        number_of_rooms = 5
        state_storage.set_value(f'number_of_rooms:{chat_id}', number_of_rooms)
    elif data == 'cac_price_finishing':
        price_of_finishing = "price_finishing"
        cac_age_of_repair(chat_id)
        state_storage.set_value(f'price_of_finishing:{chat_id}', price_of_finishing)
    elif data == 'cac_price_big_repair':
        price_of_finishing = "price_big_repair"
        cac_age_of_repair(chat_id)
        state_storage.set_value(f'price_of_finishing:{chat_id}', price_of_finishing)
    elif data == 'cac_price_cosmetic':
        price_of_finishing = "price_cosmetic"
        cac_age_of_repair(chat_id)
        state_storage.set_value(f'price_of_finishing:{chat_id}', price_of_finishing)
    elif data == 'cac_price_good':
        price_of_finishing = "price_good"
        cac_age_of_repair(chat_id)
        state_storage.set_value(f'price_of_finishing:{chat_id}', price_of_finishing)
    elif data == 'cac_price_perfect':
        price_of_finishing = "price_perfect"
        cac_age_of_repair(chat_id)
        state_storage.set_value(f'price_of_finishing:{chat_id}', price_of_finishing)
    elif data == 'cac_price_design':
        price_of_finishing = "price_design"
        cac_age_of_repair(chat_id)
        state_storage.set_value(f'price_of_finishing:{chat_id}', price_of_finishing)
    elif data == 'cac_back_to_cmrc':
        cac_minsk_region_choice(chat_id)
    elif data == 'cac_back_to_cmsc':
        cac_minsk_street_choice(chat_id)
    elif data == 'cac_back_to_chn':
        cac_house_number(chat_id)
    elif data == 'cac_back_to_ctoh':
        cac_type_of_house(call.message)
    elif data == 'cac_back_to_cr':
        cac_repair(call.message.chat.id)
    elif data == 'cac_back_to_caoh':
        cac_age_of_house(chat_id)
    elif data == 'cac_back_to_cnore':
        cac_number_of_rooms_entry(chat_id)
    elif data == 'cac_back_to_cta':
        cac_age_of_house(chat_id)
    elif data == 'cac_back_to_caor':
        cac_age_of_repair(chat_id)
    elif call.data in ['USD', 'EUR', 'CNY', 'BYN', 'RUB']:
        cf_chosen_currency = call.data
        state_storage.set_value(f'cf_chosen_currency:{chat_id}', cf_chosen_currency)
        cf_price_for_fee_input(chat_id) 
    elif call.data == 'cf_restart':
        cf_restart(chat_id)    
    elif data == 'r_property_appreciation':
        r_property_appreciation(call.message)
    elif data == "r_restart":
        r_restart(call.message)
    elif data == 'r_share' or data == 'r_1room' or data == 'r_2room' or data == 'r_3room' or data == 'r_4room' or data == 'r_5room':
        chat_id = call.message.chat.id
        state_storage.set_value(f'r_num_of_rooms:{chat_id}', data)
        r_forecast_period(call.message.chat.id) 
    elif data == 'back_to_rpa':
        r_property_appreciation(call.message)
    elif data == 'back_to_raa':
        r_apartment_area(chat_id)
    elif data == 'back_to_rfp':
        r_forecast_period(chat_id)
    elif data == 'back_to_rrp':
        r_rental_price(chat_id)
    elif data == 'back_to_rmc':
        r_maintenance_cost(chat_id)
    elif data == 'back_to_rnor':
        r_number_of_rooms(chat_id)
    elif data == 'services_sell':
        info = 'sell'
        state_storage.set_value(f'type_of_service:{chat_id}', info)
        services_sell(chat_id)
    elif data == 'services_buy':
        info = 'buy'
        state_storage.set_value(f'type_of_service:{chat_id}', info)
        services_sell(chat_id)
    elif data == 'services_docs':
        info = 'docs'
        state_storage.set_value(f'type_of_service:{chat_id}', info)
        services_sell(chat_id)
    elif data == 'services_sell_final':
        services_sell_final2(chat_id)





def send_message_to_all():
    now = datetime.datetime.now()
    if 18 <= now.hour <= 21:
        try:
            with Session() as session_mail_send:
                users = session_mail_send.query(User).all()
                for user in users:
                    if user.active:
                        user.messages += 1
                        if user.messages == 1:
                            url='https://vc.ru/u/1529738-pashtet-medved/806795-kak-prodat-kvartiru-za-rekordnuyu-cenu-ispolzuem-dizayn-socseti-i-kontent'
                            with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/mail/1.jpg', 'rb') as img1:
                                bot.send_photo(user.uid, img1, caption=f'–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {user.nick1} {user.nick2}!\n –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é –æ —Ç–æ–º –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–∞ —à–∏—Ä–æ–∫–∞—è, –∞ –≥–ª–∞–≤–Ω–æ–µ –≥—Ä–∞–º–æ—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.\n –° –Ω–µ–π –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ', reply_markup=create_keyboard_mail1(url))
                        elif user.messages == 2:
                            url='https://vc.ru/u/1529738-pashtet-medved/803809-dohodnyy-analiz-ceny-kak-prodat-po-maksimumu-kommercheskuyu-nedvizhimost-i-zhile-pod-arendu'
                            with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/mail/2.jpg', 'rb') as img1:
                                bot.send_photo(user.uid, img1, caption=f'{user.nick1} {user.nick2}, –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä. –£ –º–µ–Ω—è —Å–Ω–æ–≤–∞ –¥–ª—è –≤–∞—Å –ø–æ—Ä—Ü–∏—è —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –º—ã –∑–∞—Ç—Ä–æ–Ω–µ–º –æ—Ü–µ–Ω–∫—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ \n –¥–æ—Ö–æ–¥–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º, –æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –Ω–æ –∏ –≤—ã—á–∏—Å–ª–∏—Ç—å \n –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å —Å–¥–∞—á–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –∞—Ä–µ–Ω–¥—É. –°—Å—ã–ª–∫–∞ –Ω–∏–∂–µ ...', reply_markup=create_keyboard_mail1(url))
                        elif user.messages == 3:
                            url='https://vc.ru/u/1529738-pashtet-medved/812682-kak-provesti-analiz-rynka-nedvizhimosti-poshagovoe-rukovodstvo-dlya-investorov-pokupateley-i-prodavcov'
                            with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/mail/3.jpg', 'rb') as img1:
                                bot.send_photo(user.uid, img1, caption=f'–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.nick1} {user.nick2}! \n –ù–µ —Ö–æ—Ç–∏—Ç–µ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª –æ —Ç–æ–º –∫–∞–∫ –Ω–∞—É—á–∏—Ç—Å—è –æ—Ü–µ–Ω–∏–≤–∞—Ç—å –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–∞ —Ä—ã–Ω–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏? \n –ï—Å–ª–∏ –≥–æ—Ä–∏—Ç–µ –∂–µ–ª–∞–Ω–∏–µ–º, —Å—Å—ã–ª–æ—á–∫–∞ –±—É–¥–µ—Ç –Ω–∏–∂–µ.', reply_markup=create_keyboard_mail1(url))
                        elif user.messages == 4:
                            url='https://vc.ru/u/1529738-pashtet-medved/883502-dohodnyy-sposob-ocenki-nedvizhimosti-s-ispolzovaniem-zakona-metkalfa'
                            with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/mail/4.jpg', 'rb') as img1:
                                bot.send_photo(user.uid, img1, caption=f'–ö–∞–∫ –≤–∞–º –≤–µ—á–µ—Ä, {user.nick1} {user.nick2}?\n –ù–µ —Ö–æ—Ç–∏—Ç–µ —Å–∫–æ—Ä–∞—Ç–∞—Ç—å –µ–≥–æ –∑–∞ –ø—Ä–æ—á—Ç–µ–Ω–∏–µ–º —á–µ–≥–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ?\n –¢–∞–º —É –Ω–∞—Å –µ—Å—Ç—å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –æ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –º–µ—Ç–æ–¥–µ –æ—Ü–µ–Ω–∫–∏, –µ—Å–ª–∏ —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ...', reply_markup=create_keyboard_mail1(url))
                        elif user.messages == 5:
                            url='https://vc.ru/u/1529738-pashtet-medved/801207-zatratnyy-metod-ocenki-nedvizhimosti-kak-uznat-cenu-nizhe-kotoroy-prodavat-nelzya'
                            with open('C:/Users/Admin/Desktop/bot_real_estate/bot/content/mail/5.jpg', 'rb') as img1:
                                bot.send_photo(user.uid, img1, caption=f'–Ø –≤–∞–º –Ω–µ –ø–æ–º–µ—à–∞–ª, {user.nick1} {user.nick2}? –£ –º–µ–Ω—è –¥–ª—è –≤–∞—Å —à–∏–∫–∞—Ä–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–µ —Ö–æ—Ç–∏—Ç–µ —Å–∫–æ—Ä–æ—Ç–∞—Ç—å –ø–æ–ª—á–∞—Å–∏–∫–∞ \n –∑–∞ –ø—Ä–æ—á—Ç–µ–Ω–∏–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –æ —Ç–æ–º –∫–∞–∫ –æ—Ü–µ–Ω–∏—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –ø–æ –µ—ë —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º. –ò –¥–∞ —Å—Å—ã–ª–æ—á–∫–∞ —Å–Ω–∏–∑—É.', reply_markup=create_keyboard_mail1(url))
        except telebot.apihelper.ApiTelegramException as e:
            pass
def create_keyboard_mail1(url):
    mail_keyboard1 = types.InlineKeyboardMarkup()
    mail_keyboard1.add(types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—å—é', url=url))
    return mail_keyboard1

def send_reminders():
    reminder_states = state_storage.get_all_reminder_states()
    for chat_id, state in reminder_states.items():
        try:
            if state == 'cac_started':
                message = '–ü–æ—Ö–æ–∂–µ, –≤—ã –∑–∞–±—ã–ª–∏ –æ–±–æ –º–Ω–µüò•! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?'
            elif state == 'cac_in_progress':
                message = '–Ø –∑–∞–º–µ—Ç–∏–ª, —á—Ç–æ –≤—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ï—Å—Ç—å —á—Ç–æ-—Ç–æ, –≤ —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?'
            elif state == 'r_in_started':
                message = '–ü–æ—Ö–æ–∂–µ, –≤—ã –∑–∞–±—ã–ª–∏ –æ–±–æ –º–Ω–µüò•! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?'
            elif state == 'r_in_progress':
                message = '–Ø –∑–∞–º–µ—Ç–∏–ª, —á—Ç–æ –≤—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ï—Å—Ç—å —á—Ç–æ-—Ç–æ, –≤ —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?'
            bot.send_message(chat_id, message)
        except Exception as e:
            pass

def schedule_message_sending():
    hour = random.randint(18, 20)
    minute = random.randint(0, 59)
    time_str = f"{hour:02d}:{minute:02d}"
    schedule.every(2).days.at(time_str).do(send_message_to_all)

schedule_message_sending()

def reschedule_message_sending():
    schedule.clear(send_message_to_all)
    schedule_message_sending()

schedule.every(2).days.at("21:01").do(reschedule_message_sending)
     
schedule.every(3).hours.do(send_reminders)
schedule.every(2).days.at("18:00").do(send_message_to_all)

def run_scheduler():
    while True:
        schedule.run_pending()
        time.sleep(1)

scheduler_thread = threading.Thread(target=run_scheduler)
scheduler_thread.start()

def main():
    bot.infinity_polling(none_stop=True)

if __name__ == '__main__':
    main()


	
